# profile to include and link Python


# Change this variable to your python version (2.6, 2.7, 3.3, ...)
isEmpty( PYTHON_VERSION ) {
  PYTHON_VERSION=$$(PYTHON_VERSION)
}
isEmpty( PYTHON_VERSION ) {
  win32:PYTHON_VERSION=27
  unix:PYTHON_VERSION=2.7
}

isEmpty( PYTHON_DIR ) {
  PYTHON_DIR=$$(PYTHON_DIR)
}
!isEmpty( PYTHON_DIR ) {
  PYTHON_DIR=$${PYTHON_DIR}/
}

PYTHON_VERSION_MAJOR=$$section(PYTHON_VERSION, ., 0, 0)
PYTHON_VERSION_MINOR=$$section(PYTHON_VERSION, ., 1, 1)

!equals(PYTHON_VERSION, $${PYTHON_VERSION_MAJOR}.$${PYTHON_VERSION_MINOR}) {
  error("Failed to parse PYTHON_VERSION:\"$$PYTHON_VERSION\"")
} else {
  message(Using Python version $${PYTHON_VERSION})
}


# Python 2.x has problems:
# 1) https://wiki.gentoo.org/wiki/Project:Python/Strict_aliasing
# 2) deprecated implicit cast of string literals to char*
equals(PYTHON_VERSION_MAJOR, 2):gcc:QMAKE_CXXFLAGS *= -fno-strict-aliasing -Wno-error=write-strings
contains(PKGCONFIG, "python.*"){
  CONFIG += link_pkgconfig
  PYTHON_PKGCONFIG = $$member($$unique($$find(PKGCONFIG, "python.*")), 1, 1)
  # add rpath
  PYTHON_LIBDIR = $$system($$pkgConfigExecutable() --libs-only-L $$PYTHON_PKGCONFIG)
  QMAKE_RPATHDIR += $$replace(PYTHON_LIBDIR,-L,)
} else:macx:isEmpty(PYTHON_DIR){
  # for macx you need to have the Python development kit installed as framework
  INCLUDEPATH += /System/Library/Frameworks/Python.framework/Headers
  LIBS += -F/System/Library/Frameworks -framework Python
} else:win32 {
  # for windows install a Python development kit or build Python yourself from the sources
  # Make sure that you set the environment variable PYTHON_PATH to point to your
  # python installation (or the python sources/header files when building from source).
  # Make sure that you set the environment variable PYTHON_LIB to point to
  # the directory where the python libs are located.
  #
  # When using the prebuild Python installer, this will be:
  # set PYTHON_PATH = c:\Python26
  # set PYTHON_LIB  = c:\Python26\libs
  #
  # When using the python sources, this will be something like:
  # set PYTHON_PATH = c:\yourDir\Python-2.6.1\
  # set PYTHON_LIB  = c:\yourDir\Python-2.6.1\PCbuild8\Win32

  # check if debug or release
  CONFIG(debug, debug|release) {
    DEBUG_EXT = _d 
  } else {
    DEBUG_EXT = 
  }

  win32:INCLUDEPATH += $$(PYTHON_PATH)/PC $$(PYTHON_PATH)/include
  win32:LIBS += $$(PYTHON_LIB)/python$${PYTHON_VERSION}$${DEBUG_EXT}.lib
} else:unix {
  # on linux, python-config is used to autodetect Python.
  # make sure that you have installed a matching python-dev package.
  
  PYTHON_CONFIG = $${PYTHON_DIR}/bin/python$${PYTHON_VERSION}-config
  PYTHON_CONFIG_OPTIONS_LIBS = --libs
  equals(PYTHON_VERSION_MAJOR, 3):!lessThan(PYTHON_VERSION_MINOR, 8) {
    # Since 3.8 `--embed` is needed
    PYTHON_CONFIG_OPTIONS_LIBS += --embed
  }
  LIBS += $$system($${PYTHON_CONFIG} $${PYTHON_CONFIG_OPTIONS_LIBS})
  QMAKE_CXXFLAGS += $$system($${PYTHON_CONFIG} --includes)
  PYTHON_LFLAGS = $$system($${PYTHON_CONFIG} --ldflags)
  QMAKE_LFLAGS += $${PYTHON_LFLAGS}
  # add rpath
  PYTHON_LIBDIR = $$find(PYTHON_LFLAGS,-L.*)
  PYTHON_RPATH = $$replace(PYTHON_LIBDIR,-L,)
  QMAKE_RPATHDIR += $$PYTHON_RPATH
}
