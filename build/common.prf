
# depending on your Qt configuration, you want to enable or disable
# one of the release/debug builds (if all three lines are commented,
# the default of your Qt installation will used)

# build with both debug and release mode
#CONFIG += debug_and_release build_all

# build with release mode only
#CONFIG += release

# build with debug mode only
#CONFIG += debug

# for all debug builds, add "_d" extension to target
CONFIG(debug, debug|release) {
  TARGET = $${TARGET}_d 
}

# Try files that are generated by the user:
PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp

!exists($$PYTHONQT_GENERATED_PATH) {
  # If no files are generated, try the checked-in wrappers:
  PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$${QT_MAJOR_VERSION}$${QT_MINOR_VERSION}

  !exists($$PYTHONQT_GENERATED_PATH) {
    # For Qt5 we know that the older generated wrappers work with the later
    # versions, even (apparently) Qt5.15, so:
    equals(QT_MAJOR_VERSION, 5) {
      # Qt5: have 5.0, 5.3, 5.4, 5.6 and 5.11 at present:
      lessThan(QT_MINOR_VERSION, 3) { # 5.1, 5.2
        PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_50
      }
      else: lessThan(QT_MINOR_VERSION, 6) { # 5.5
        PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_54
      }
      else: lessThan(QT_MINOR_VERSION, 11) { # 5.7, 5.8, 5.9, 5.10
        PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_56
      }
      else { # >5.11
        # LATEST Qt5 generated files:
        PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_511
      }
    }

    !exists($$PYTHONQT_GENERATED_PATH) {
      error("No generated sources exist for Qt$${QT_VERSION}")
    }
  }
}

!build_pass {
  message("Qt version: Qt$${QT_VERSION}")
  message("Using generated sources files from $${PYTHONQT_GENERATED_PATH}")
}

VERSION = 3.2.0
win32: CONFIG += skip_target_version_ext
gcc|win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-deprecated-declarations -Wuninitialized -Winit-self -pedantic
win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-unused-command-line-argument
#Do not issue warning to system includes
gcc:!isEmpty(QT_INSTALL_HEADERS): QMAKE_CXXFLAGS += -isystem $$[QT_INSTALL_HEADERS]
