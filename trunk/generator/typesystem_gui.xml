<?xml version="1.0"?>
<typesystem package="com.trolltech.qt.gui">
  <rejection class="QColormap"/>
  <rejection class="QIconEngineV2"/>
  <rejection class="QTextBlock::iterator"/>
  <rejection class="QTextFrame::iterator"/>
  <rejection class="QTreeWidgetItemIterator"/>
  <rejection class="QAccessibleFactoryInterface"/>
  <rejection class="QIconEngineFactoryInterfaceV2"/>
  <rejection class="QImageIOHandlerFactoryInterface"/>
  <rejection class="QInputContextFactoryInterface"/>
  <rejection class="QStyleFactoryInterface"/>
  <rejection class="QPictureFormatInterface"/>

  <rejection class="*" function-name="d_func"/>

  <rejection class="*" field-name="d_ptr"/>
  <rejection class="*" field-name="d"/>


  <rejection class="QGenericMatrix"/>  
  <rejection class="QPixmapFilterPrivate"/>
  <rejection class="QPenPrivate"/>
  <rejection class="QGtkStyle"/>
  <rejection class="QWindowsCEStyle"/>
  <rejection class="QWindowsMobileStyle"/>
  <rejection class="QAbstractUndoItem"/>
  <rejection class="QAccessibleApplication"/>
  <rejection class="QBrushData"/>
  <rejection class="QImageTextKeyLang"/>
  <rejection class="QItemEditorCreator"/>
  <rejection class="QLinkedList"/>
  <rejection class="QLinkedListData"/>
  <rejection class="QLinkedListIterator"/>
  <rejection class="QLinkedListNode"/>
  <rejection class="QMimeSource"/>
  <rejection class="QPainterPathPrivate"/>
  <rejection class="QRegionData"/>
  <rejection class="QStandardItemEditorCreator"/>
  <rejection class="QStyleOptionQ3DockWindow"/>
  <rejection class="QStyleOptionQ3ListView"/>
  <rejection class="QStyleOptionQ3ListViewItem"/>
  <rejection class="QTextFrameLayoutData"/>
  <rejection class="QUpdateLaterEvent"/>
  <rejection class="QVFbHeader"/>
  <rejection class="QWidgetData"/>
  <rejection class="QWindowSurface"/>
  <rejection class="QWindowsXPStyle"/>
  <rejection class="QWindowsVistaStyle"/>
  <rejection class="QWSEmbedWidget"/>
  <rejection class="QRegion::QRegionData"/>
  <rejection class="JObject_key"/>
  <rejection class="QAccessibleEditableTextInterface"/>
  <rejection class="QAccessibleSimpleEditableTextInterface"/>
  <rejection class="QAccessibleTextInterface"/>
  <rejection class="QAccessibleValueInterface"/>
  <rejection class="QIconEngineFactoryInterface"/>
  <rejection class="QIconEnginePlugin"/>
  <rejection class="QWidgetItemV2"/>
  <rejection class="QAbstractItemDelegate" function-name="operator="/>
  <rejection class="QAccessible" function-name="installFactory"/>
  <rejection class="QAccessible" function-name="installRootObjectHandler"/>
  <rejection class="QAccessible" function-name="installUpdateHandler"/>
  <rejection class="QAccessible" function-name="removeFactory"/>
  <rejection class="QApplication" function-name="compressEvent"/>
  <rejection class="QBrush" function-name="cleanUp"/>
  <rejection class="QPictureIO" function-name="defineIOHandler"/>
  <rejection class="QPolygon" function-name="putPoints"/>
  <rejection class="QPolygon" function-name="setPoints"/>
  <rejection class="QPolygon" function-name="setPoint"/>
  <rejection class="QPolygon" function-name="points"/>
  <rejection class="QPolygon" function-name="point"/>
  <rejection class="QPrinter" function-name="printerSelectionOption"/>
  <rejection class="QPrinter" function-name="setPrinterSelectionOption"/>
  <rejection class="QWidget" function-name="create"/>
  <rejection class="QWidget" function-name="find"/>
  <rejection class="QWidget" function-name="handle"/>
  <rejection class="QWidget" function-name="styleChange"/>
  <rejection class="QWidget" function-name="internalWinId"/>
  <rejection class="QActionGroup" function-name="selected"/>
  <rejection class="QPaintEngine" function-name="fix_neg_rect"/>
  <rejection class="QTreeModel" function-name="node"/>
  <rejection class="QTreeModel" function-name="initializeNode"/>
  <rejection class="QTreeModel" function-name="queryChildren"/>
  <rejection class="QTextObjectInterface"/>
  <rejection class="QAccessible" function-name="cast_helper"/>
  <rejection class="QAccessible2"/>
  <rejection class="QAccessibleInterface" function-name="backgroundColor"/>
  <rejection class="QAccessibleInterface" function-name="foregroundColor"/>
  <rejection class="QAccessibleInterface" function-name="textInterface"/>
  <rejection class="QAccessibleInterface" function-name="valueInterface"/>
  <rejection class="QAccessibleInterface" function-name="tableInterface"/>
  <rejection class="QAccessibleInterface" function-name="editableTextInterface"/>
  <rejection class="QAccessibleInterface" function-name="cast_helper"/>
  <rejection class="QAccessibleInterfaceEx" function-name="interface_cast"/>
  <rejection class="QAccessibleBridgePlugin"/>
  <rejection class="QAccessibleBridgeFactoryInterface"/>
  <rejection class="QTabletEvent" field-name="mExtra"/>
  <rejection class="QWidgetItem" field-name="wid"/>
  <rejection class="QFont" enum-name="ResolveProperties"/>
  <rejection class="QGradient" enum-name="InterpolationMode"/>
  <rejection class="QIconEngineV2::AvailableSizesArgument"/>
  <rejection class="QIconEngineV2" enum-name="IconEngineHook"/>
  <rejection class="QGradient" enum-name="InterpolationMode"/>
  <rejection class="QGradient" function-name="setInterpolationMode"/>
  <rejection class="QGradient" function-name="interpolationMode"/>
  <rejection class="QAbstractTextDocumentLayout" function-name="handlerForObject"/>
  
  <enum-type name="QStaticText::PerformanceHint"/>
  <enum-type name="QTextBlockFormat::LineHeightTypes"/>
  <enum-type name="QStyleOptionTabWidgetFrameV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTabBarBaseV2::StyleOptionVersion"/>
  <enum-type name="QTabBar::SelectionBehavior"/>
  <enum-type name="QTabBar::ButtonPosition"/>
  <enum-type name="QInputDialog::InputMode"/>
  <enum-type name="QInputDialog::InputDialogOption" flags="QInputDialog::InputDialogOptions"/>
  <enum-type name="QFontDialog::FontDialogOption" flags="QFontDialog::FontDialogOptions"/>
  <enum-type name="QColorDialog::ColorDialogOption" flags="QColorDialog::ColorDialogOptions"/>
  <enum-type name="QAbstractItemDelegate::EndEditHint"/>
  <enum-type name="QAbstractItemView::CursorAction"/>
  <enum-type name="QAbstractItemView::DragDropMode"/>
  <enum-type name="QAbstractItemView::DropIndicatorPosition"/>
  <enum-type name="QAbstractItemView::EditTrigger" flags="QAbstractItemView::EditTriggers"/>
  <enum-type name="QAbstractItemView::ScrollHint"/>
  <enum-type name="QAbstractItemView::ScrollMode"/>
  <enum-type name="QAbstractItemView::SelectionBehavior"/>
  <enum-type name="QAbstractItemView::SelectionMode"/>
  <enum-type name="QAbstractItemView::State"/>
  <enum-type name="QAbstractPrintDialog::PrintDialogOption" flags="QAbstractPrintDialog::PrintDialogOptions"/>
  <enum-type name="QAbstractPrintDialog::PrintRange"/>
  <enum-type name="QAbstractSlider::SliderAction"/>
  <enum-type name="QAbstractSlider::SliderChange"/>
  <enum-type name="QAbstractSpinBox::ButtonSymbols"/>
  <enum-type name="QAbstractSpinBox::CorrectionMode"/>
  <enum-type name="QAbstractSpinBox::StepEnabledFlag" flags="QAbstractSpinBox::StepEnabled"/>
  <enum-type name="QAccessible::Event"/>
  <enum-type name="QAccessible::Method"/>
  <enum-type name="QAccessible::RelationFlag" flags="QAccessible::Relation"/>
  <enum-type name="QAccessible::Role"/>
  <enum-type name="QAccessible::StateFlag" flags="QAccessible::State"/>
  <enum-type name="QAccessible::Text"/>
  <enum-type name="QDesktopServices::StandardLocation"/>
  <enum-type name="QDirModel::Roles"/>
  <enum-type name="QFont::Capitalization"/>
  <enum-type name="QFont::SpacingType"/>
  <enum-type name="QGraphicsItem::CacheMode"/>
  <enum-type name="QMdiArea::AreaOption" flags="QMdiArea::AreaOptions"/>
  <enum-type name="QMdiArea::WindowOrder"/>
  <enum-type name="QMdiArea::ViewMode"/>
  <enum-type name="QFileSystemModel::Roles"/>
  <enum-type name="QFormLayout::FieldGrowthPolicy"/>
  <enum-type name="QFormLayout::FormStyle"/>
  <enum-type name="QFormLayout::ItemRole"/>
  <enum-type name="QFormLayout::RowWrapPolicy"/>
  <enum-type name="QGraphicsProxyWidget::enum_1"/>
  <enum-type name="QGraphicsWidget::enum_1"/>
  <enum-type name="QPlainTextEdit::LineWrapMode"/>
  <enum-type name="QPrintPreviewWidget::ViewMode"/>
  <enum-type name="QPrintPreviewWidget::ZoomMode"/>
  <enum-type name="QStyleOptionTabV3::StyleOptionVersion"/>
  <enum-type name="QStyleOptionFrameV3::StyleOptionVersion"/>
  <enum-type name="QStyleOptionViewItemV4::StyleOptionVersion"/>
  <enum-type name="QStyleOptionViewItemV4::ViewItemPosition"/>

  <enum-type name="QMdiSubWindow::SubWindowOption" flags="QMdiSubWindow::SubWindowOptions"/>

  <enum-type name="QAction::ActionEvent"/>
  <enum-type name="QAction::MenuRole"/>
  <enum-type name="QApplication::ColorSpec"/>
  <enum-type name="QApplication::Type"/>
  <enum-type name="QCalendarWidget::HorizontalHeaderFormat"/>
  <enum-type name="QCalendarWidget::SelectionMode"/>
  <enum-type name="QCalendarWidget::VerticalHeaderFormat"/>
  <enum-type name="QColor::Spec"/>
  <enum-type name="QColormap::Mode"/>
  <enum-type name="QComboBox::InsertPolicy"/>
  <enum-type name="QComboBox::SizeAdjustPolicy"/>
  <enum-type name="QCompleter::CompletionMode"/>
  <enum-type name="QCompleter::ModelSorting"/>
  <enum-type name="QContextMenuEvent::Reason"/>
  <enum-type name="QDataWidgetMapper::SubmitPolicy"/>
  <enum-type name="QDateTimeEdit::Section" flags="QDateTimeEdit::Sections"/>
  <enum-type name="QDialog::DialogCode"/>
  <enum-type name="QDialogButtonBox::ButtonLayout"/>
  <enum-type name="QDialogButtonBox::ButtonRole"/>
  <enum-type name="QFileDialog::AcceptMode"/>
  <enum-type name="QFileDialog::DialogLabel"/>
  <enum-type name="QFileDialog::FileMode"/>
  <enum-type name="QFileDialog::Option" flags="QFileDialog::Options"/>
  <enum-type name="QFileDialog::ViewMode"/>
  <enum-type name="QFileIconProvider::IconType"/>
  <enum-type name="QFont::Stretch"/>
  <enum-type name="QFont::Style"/>
  <enum-type name="QFont::StyleStrategy"/>
  <enum-type name="QFont::Weight"/>
  <enum-type name="QFontComboBox::FontFilter" flags="QFontComboBox::FontFilters"/>
  <enum-type name="QFrame::Shadow" extensible="yes"/>
  <enum-type name="QFrame::Shape"/>
  <enum-type name="QFrame::StyleMask"/>
  <enum-type name="QGradient::CoordinateMode"/>
  <enum-type name="QGradient::Spread" lower-bound="QGradient.PadSpread" upper-bound="QGradient.RepeatSpread"/>
  <enum-type name="QGradient::Type"/>
  <enum-type name="QGraphicsEllipseItem::enum_1"/>
  <enum-type name="QGraphicsItem::Extension"/>
  <enum-type name="QGraphicsItem::GraphicsItemChange"/>
  <enum-type name="QGraphicsItem::GraphicsItemFlag" flags="QGraphicsItem::GraphicsItemFlags"/>
  <enum-type name="QGraphicsItem::enum_1"/>
  <enum-type name="QGraphicsItemGroup::enum_1"/>
  <enum-type name="QGraphicsLineItem::enum_1"/>
  <enum-type name="QGraphicsPathItem::enum_1"/>
  <enum-type name="QGraphicsPixmapItem::ShapeMode"/>
  <enum-type name="QGraphicsPixmapItem::enum_1"/>
  <enum-type name="QGraphicsPolygonItem::enum_1"/>
  <enum-type name="QGraphicsRectItem::enum_1"/>
  <enum-type name="QGraphicsScene::ItemIndexMethod"/>
  <enum-type name="QGraphicsSceneContextMenuEvent::Reason"/>
  <enum-type name="QGraphicsSimpleTextItem::enum_1"/>
  <enum-type name="QGraphicsTextItem::enum_1"/>
  <enum-type name="QGraphicsView::CacheModeFlag" flags="QGraphicsView::CacheMode"/>
  <enum-type name="QGraphicsView::DragMode"/>
  <enum-type name="QGraphicsView::OptimizationFlag" flags="QGraphicsView::OptimizationFlags"/>
  <enum-type name="QGraphicsView::ViewportAnchor"/>
  <enum-type name="QGraphicsView::ViewportUpdateMode"/>
  <enum-type name="QIcon::Mode"/>
  <enum-type name="QIcon::State"/>
  <enum-type name="QImage::Format"/>
  <enum-type name="QImage::InvertMode"/>
  <enum-type name="QImageIOHandler::ImageOption"/>
  <enum-type name="QImageReader::ImageReaderError"/>
  <enum-type name="QImageWriter::ImageWriterError"/>
  <enum-type name="QInputContext::StandardFormat"/>
  <enum-type name="QInputMethodEvent::AttributeType"/>
  <enum-type name="QItemSelectionModel::SelectionFlag" flags="QItemSelectionModel::SelectionFlags"/>
  <enum-type name="QKeySequence::SequenceFormat"/>
  <enum-type name="QKeySequence::SequenceMatch"/>
  <enum-type name="QKeySequence::StandardKey"/>
  <enum-type name="QLCDNumber::Mode"/>
  <enum-type name="QLCDNumber::SegmentStyle"/>
  <enum-type name="QLayout::SizeConstraint"/>
  <enum-type name="QLineEdit::EchoMode"/>
  <enum-type name="QListView::Flow"/>
  <enum-type name="QListView::LayoutMode"/>
  <enum-type name="QListView::Movement"/>
  <enum-type name="QListView::ResizeMode"/>
  <enum-type name="QListView::ViewMode"/>
  <enum-type name="QListWidgetItem::ItemType"/>
  <enum-type name="QMainWindow::DockOption" flags="QMainWindow::DockOptions"/>
  <enum-type name="QMessageBox::ButtonRole"/>
  <enum-type name="QMessageBox::Icon"/>
  <enum-type name="QMovie::CacheMode"/>
  <enum-type name="QMovie::MovieState"/>
  <enum-type name="QPaintDevice::PaintDeviceMetric"/>
  <enum-type name="QPaintEngine::DirtyFlag" flags="QPaintEngine::DirtyFlags"/>
  <enum-type name="QPaintEngine::PaintEngineFeature" flags="QPaintEngine::PaintEngineFeatures"/>
  <enum-type name="QPaintEngine::PolygonDrawMode"/>
  <enum-type name="QPaintEngine::Type"/>
  <enum-type name="QPageSetupDialog::PageSetupDialogOption" flags="QPageSetupDialog::PageSetupDialogOptions"/>
  <enum-type name="QPainter::CompositionMode"/>
  <enum-type name="QPainter::RenderHint" flags="QPainter::RenderHints"/>
  <enum-type name="QPainterPath::ElementType"/>
  <enum-type name="QPrintEngine::PrintEnginePropertyKey">
    <reject-enum-value name="PPK_PaperSize"/>
  </enum-type>
  <enum-type name="QPrinter::ColorMode"/>
  <enum-type name="QPrinter::Orientation"/>
  <enum-type name="QPrinter::OutputFormat"/>
  <enum-type name="QPrinter::PageOrder"/>
  <enum-type name="QPrinter::PaperSource"/>
  <enum-type name="QPrinter::PrintRange"/>
  <enum-type name="QPrinter::PrinterMode"/>
  <enum-type name="QPrinter::PrinterState"/>
  <enum-type name="QPrinter::Unit"/>
  <enum-type name="QPrinter::DuplexMode"/>
  <enum-type name="QProgressBar::Direction"/>
  <enum-type name="QRegion::RegionType"/>
  <enum-type name="QRubberBand::Shape"/>
  <enum-type name="QSessionManager::RestartHint"/>
  <enum-type name="QSizePolicy::Policy"/>
  <enum-type name="QSizePolicy::PolicyFlag"/>
  <enum-type name="QSizePolicy::ControlType" flags="QSizePolicy::ControlTypes"/>
  <enum-type name="QStandardItem::ItemType"/>
  <enum-type name="QStyle::SubControl" flags="QStyle::SubControls" extensible="yes" force-integer="yes"/>
  <enum-type name="QStyle::ComplexControl" extensible="yes"/>
  <enum-type name="QStyle::ContentsType" extensible="yes"/>
  <enum-type name="QStyle::ControlElement" extensible="yes"/>
  <enum-type name="QStyle::PixelMetric" extensible="yes">
    <reject-enum-value name="PM_MDIFrameWidth"/>
    <reject-enum-value name="PM_MDIMinimizedWidth"/>
  </enum-type>
  <enum-type name="QStyle::PrimitiveElement" extensible="yes">
    <reject-enum-value name="PE_IndicatorItemViewItemCheck"/>
    <reject-enum-value name="PE_FrameStatusBarItem"/>
  </enum-type>
  <enum-type name="QStyle::StandardPixmap" extensible="yes"/>
  <enum-type name="QStyle::StateFlag" flags="QStyle::State"/>
  <enum-type name="QStyle::SubElement" extensible="yes">
    <reject-enum-value name="SE_ItemViewItemCheckIndicator"/>
  </enum-type>
  <enum-type name="QStyleHintReturn::HintReturnType"/>
  <enum-type name="QStyleHintReturn::StyleOptionType"/>
  <enum-type name="QStyleHintReturn::StyleOptionVersion"/>
  <enum-type name="QStyleHintReturnVariant::StyleOptionType"/>
  <enum-type name="QStyleHintReturnVariant::StyleOptionVersion"/>

  <enum-type name="QStyleHintReturnMask::StyleOptionType"/>
  <enum-type name="QStyleHintReturnMask::StyleOptionVersion"/>
  <enum-type name="QStyleOption::StyleOptionType"/>
  <enum-type name="QStyleOption::OptionType" extensible="yes"/>
  <enum-type name="QStyleOption::StyleOptionVersion"/>
  <enum-type name="QStyleOptionButton::ButtonFeature" flags="QStyleOptionButton::ButtonFeatures"/>
  <enum-type name="QStyleOptionButton::StyleOptionType"/>
  <enum-type name="QStyleOptionButton::StyleOptionVersion"/>
  <enum-type name="QStyleOptionComboBox::StyleOptionType"/>
  <enum-type name="QStyleOptionComboBox::StyleOptionVersion"/>
  <enum-type name="QStyleOptionComplex::StyleOptionType"/>
  <enum-type name="QStyleOptionComplex::StyleOptionVersion"/>
  <enum-type name="QStyleOptionDockWidget::StyleOptionType"/>
  <enum-type name="QStyleOptionDockWidget::StyleOptionVersion"/>
  <enum-type name="QStyleOptionDockWidgetV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionFocusRect::StyleOptionType"/>
  <enum-type name="QStyleOptionFocusRect::StyleOptionVersion"/>
  <enum-type name="QStyleOptionFrame::StyleOptionType"/>
  <enum-type name="QStyleOptionFrame::StyleOptionVersion"/>
  <enum-type name="QStyleOptionFrameV2::FrameFeature" flags="QStyleOptionFrameV2::FrameFeatures"/>
  <enum-type name="QStyleOptionFrameV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionFrame::FrameFeature" flags="QStyleOptionFrame::FrameFeatures"/> <!-- Qt 5 -->
  <enum-type name="QStyleOptionGraphicsItem::StyleOptionType"/>
  <enum-type name="QStyleOptionGraphicsItem::StyleOptionVersion"/>
  <enum-type name="QStyleOptionGroupBox::StyleOptionType"/>
  <enum-type name="QStyleOptionGroupBox::StyleOptionVersion"/>
  <enum-type name="QStyleOptionHeader::SectionPosition"/>
  <enum-type name="QStyleOptionHeader::SelectedPosition"/>
  <enum-type name="QStyleOptionHeader::SortIndicator"/>
  <enum-type name="QStyleOptionHeader::StyleOptionType"/>
  <enum-type name="QStyleOptionHeader::StyleOptionVersion"/>
  <enum-type name="QStyleOptionMenuItem::CheckType"/>
  <enum-type name="QStyleOptionMenuItem::MenuItemType"/>
  <enum-type name="QStyleOptionMenuItem::StyleOptionType"/>
  <enum-type name="QStyleOptionMenuItem::StyleOptionVersion"/>
  <enum-type name="QStyleOptionProgressBar::StyleOptionType"/>
  <enum-type name="QStyleOptionProgressBar::StyleOptionVersion"/>
  <enum-type name="QStyleOptionProgressBarV2::StyleOptionType"/>
  <enum-type name="QStyleOptionProgressBarV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionRubberBand::StyleOptionType"/>
  <enum-type name="QStyleOptionRubberBand::StyleOptionVersion"/>
  <enum-type name="QStyleOptionSizeGrip::StyleOptionType"/>
  <enum-type name="QStyleOptionSizeGrip::StyleOptionVersion"/>
  <enum-type name="QStyleOptionSlider::StyleOptionType"/>
  <enum-type name="QStyleOptionSlider::StyleOptionVersion"/>
  <enum-type name="QStyleOptionSpinBox::StyleOptionType"/>
  <enum-type name="QStyleOptionSpinBox::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTab::CornerWidget" flags="QStyleOptionTab::CornerWidgets"/>
  <enum-type name="QStyleOptionTab::SelectedPosition"/>
  <enum-type name="QStyleOptionTab::StyleOptionType"/>
  <enum-type name="QStyleOptionTab::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTab::TabPosition"/>
  <enum-type name="QStyleOptionTab::TabFeature" flags="QStyleOptionTab::TabFeatures"/>
  <enum-type name="QStyleOptionTabBarBase::StyleOptionType"/>
  <enum-type name="QStyleOptionTabBarBase::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTabV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTabWidgetFrame::StyleOptionType"/>
  <enum-type name="QStyleOptionTabWidgetFrame::StyleOptionVersion"/>
  <enum-type name="QStyleOptionTitleBar::StyleOptionType"/>
  <enum-type name="QStyleOptionTitleBar::StyleOptionVersion"/>
  <enum-type name="QStyleOptionToolBar::StyleOptionType"/>
  <enum-type name="QStyleOptionToolBar::StyleOptionVersion"/>
  <enum-type name="QStyleOptionToolBar::ToolBarFeature" flags="QStyleOptionToolBar::ToolBarFeatures"/>
  <enum-type name="QStyleOptionToolBar::ToolBarPosition"/>
  <enum-type name="QStyleOptionToolBox::StyleOptionType"/>
  <enum-type name="QStyleOptionToolBox::StyleOptionVersion"/>
  <enum-type name="QStyleOptionToolButton::StyleOptionType"/>
  <enum-type name="QStyleOptionToolButton::StyleOptionVersion"/>
  <enum-type name="QStyleOptionToolButton::ToolButtonFeature" flags="QStyleOptionToolButton::ToolButtonFeatures">
    <reject-enum-value name="MenuButtonPopup"/>
  </enum-type>
  <enum-type name="QStyleOptionViewItem::Position"/>
  <enum-type name="QStyleOptionViewItem::StyleOptionType"/>
  <enum-type name="QStyleOptionViewItem::StyleOptionVersion"/>
  <enum-type name="QStyleOptionViewItem::ViewItemFeature" flags="QStyleOptionViewItem::ViewItemFeatures"/> <!-- Qt 5 -->
  <enum-type name="QStyleOptionViewItemV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionViewItemV2::ViewItemFeature" flags="QStyleOptionViewItemV2::ViewItemFeatures"/>
  <enum-type name="QSystemTrayIcon::ActivationReason"/>
  <enum-type name="QSystemTrayIcon::MessageIcon"/>
  <enum-type name="QTabBar::Shape"/>
  <enum-type name="QTabWidget::TabPosition"/>
  <enum-type name="QTabWidget::TabShape"/>
  <enum-type name="QTableWidgetItem::ItemType"/>
  <enum-type name="QTabletEvent::PointerType"/>
  <enum-type name="QTabletEvent::TabletDevice"/>
  <enum-type name="QTextCharFormat::UnderlineStyle"/>
  <enum-type name="QTextCharFormat::VerticalAlignment"/>
  <enum-type name="QTextCursor::MoveMode"/>
  <enum-type name="QTextCursor::MoveOperation"/>
  <enum-type name="QTextCursor::SelectionType"/>
  <enum-type name="QTextDocument::FindFlag" flags="QTextDocument::FindFlags"/>
  <enum-type name="QTextDocument::MetaInformation"/>
  <enum-type name="QTextDocument::ResourceType"/>
  <enum-type name="QTextEdit::AutoFormattingFlag" flags="QTextEdit::AutoFormatting"/>
  <enum-type name="QTextEdit::LineWrapMode"/>
  <enum-type name="QTextFormat::ObjectTypes"/>
  <enum-type name="QTextFormat::PageBreakFlag" flags="QTextFormat::PageBreakFlags"/>
  <enum-type name="QTextFrameFormat::Position"/>
  <enum-type name="QTextFrameFormat::BorderStyle"/>
  <enum-type name="QTextItem::RenderFlag" flags="QTextItem::RenderFlags"/>
  <enum-type name="QTextLayout::CursorMode"/>
  <enum-type name="QTextLength::Type"/>
  <enum-type name="QTextLine::CursorPosition"/>
  <enum-type name="QTextLine::Edge"/>
  <enum-type name="QTextListFormat::Style"/>
  <enum-type name="QTextOption::Flag" flags="QTextOption::Flags"/>
  <enum-type name="QTextOption::WrapMode"/>
  <enum-type name="QTextOption::TabType"/>
  <enum-type name="QToolButton::ToolButtonPopupMode"/>
  <enum-type name="QTreeWidgetItem::ItemType"/>
  <enum-type name="QTreeWidgetItemIterator::IteratorFlag" flags="QTreeWidgetItemIterator::IteratorFlags"/>
  <enum-type name="QValidator::State"/>
  <enum-type name="QWidget::RenderFlag" flags="QWidget::RenderFlags"/>
  <enum-type name="QWorkspace::WindowOrder"/>
  <enum-type name="QDoubleValidator::Notation"/>
  <enum-type name="QGraphicsScene::SceneLayer" flags="QGraphicsScene::SceneLayers"/>
  <enum-type name="QStyleOptionToolBoxV2::SelectedPosition"/>
  <enum-type name="QStyleOptionToolBoxV2::StyleOptionVersion"/>
  <enum-type name="QStyleOptionToolBoxV2::TabPosition"/>
  <enum-type name="QStyleOptionViewItemV3::StyleOptionVersion"/>
  <enum-type name="QTransform::TransformationType"/>
  <enum-type name="QTreeWidgetItem::ChildIndicatorPolicy"/>
  <enum-type name="QWizard::WizardOption" flags="QWizard::WizardOptions"/>
  <enum-type name="QWizard::WizardPixmap"/>
  <enum-type name="QWizard::WizardStyle"/>
  <enum-type name="QImageIOPlugin::Capability" flags="QImageIOPlugin::Capabilities"/>
  <enum-type name="QStackedLayout::StackingMode"/>

  <enum-type name="QWizard::WizardButton">
    <reject-enum-value name="NStandardButtons"/>
    <reject-enum-value name="NButtons"/>
  </enum-type>

  <enum-type name="QAccessible::Action">
    <reject-enum-value name="FirstStandardAction"/>
    <reject-enum-value name="LastStandardAction"/>
  </enum-type>

  <enum-type name="QBoxLayout::Direction">
    <reject-enum-value name="Down"/>
    <reject-enum-value name="Up"/>
  </enum-type>


  <enum-type name="QClipboard::Mode">
    <reject-enum-value name="LastMode"/>
  </enum-type>

  <enum-type name="QDialogButtonBox::StandardButton" flags="QDialogButtonBox::StandardButtons">
    <reject-enum-value name="FirstButton"/>
    <reject-enum-value name="LastButton"/>
    <reject-enum-value name="YesAll"/>
    <reject-enum-value name="NoAll"/>
    <reject-enum-value name="Default"/>
    <reject-enum-value name="Escape"/>
    <reject-enum-value name="FlagMask"/>
    <reject-enum-value name="ButtonMask"/>
  </enum-type>

  <enum-type name="QDockWidget::DockWidgetFeature" flags="QDockWidget::DockWidgetFeatures"/>

  <enum-type name="QFont::StyleHint">
    <reject-enum-value name="SansSerif"/>
    <reject-enum-value name="Serif"/>
    <reject-enum-value name="TypeWriter"/>
    <reject-enum-value name="Decorative"/>
  </enum-type>

  <enum-type name="QFontDatabase::WritingSystem">
    <reject-enum-value name="Other"/>
  </enum-type>

  <enum-type name="QHeaderView::ResizeMode">
    <reject-enum-value name="Custom"/>
  </enum-type>


  <enum-type name="QMessageBox::StandardButton" flags="QMessageBox::StandardButtons">
    <reject-enum-value name="FirstButton"/>
    <reject-enum-value name="LastButton"/>
    <reject-enum-value name="YesAll"/>
    <reject-enum-value name="NoAll"/>
  </enum-type>

  <enum-type name="QPalette::ColorGroup">
    <reject-enum-value name="Normal"/>
  </enum-type>

  <enum-type name="QPalette::ColorRole">
    <reject-enum-value name="NColorRoles"/>
    <reject-enum-value name="Foreground"/>
    <reject-enum-value name="Background"/>
  </enum-type>

  <enum-type name="QPrinter::PageSize">
    <reject-enum-value name="NPageSize"/>
    <reject-enum-value name="NPaperSize"/>
  </enum-type>

  <enum-type name="QSlider::TickPosition">
    <reject-enum-value name="TicksLeft"/>
    <reject-enum-value name="TicksRight"/>
  </enum-type>

  <enum-type name="QStyle::StyleHint" extensible="yes">
    <reject-enum-value name="SH_ScrollBar_StopMouseOverSlider"/>
  </enum-type>


  <enum-type name="QTextFormat::FormatType"/>

  <enum-type name="QTextFormat::Property">
    <reject-enum-value name="FontSizeIncrement"/>
    <reject-enum-value name="FirstFontProperty"/>
    <reject-enum-value name="LastFontProperty"/>
  </enum-type>

 <enum-type name="QAction::Priority"/>
 <enum-type name="QAction::SoftKeyRole"/>
  <enum-type name="QGraphicsEffect::ChangeFlag" flags="QGraphicsEffect::ChangeFlags"/>
  <enum-type name="QGraphicsItem::PanelModality"/>
  <enum-type name="QPinchGesture::WhatChange" flags="QPinchGesture::WhatChanged"/>
  <enum-type name="QPinchGesture::ChangeFlag" flags="QPinchGesture::ChangeFlags"/>
  <enum-type name="QGraphicsBlurEffect::BlurHint" flags="QGraphicsBlurEffect::BlurHints"/>
  <enum-type name="QGraphicsEffect::PixmapPadMode"/>
  <enum-type name="QGestureRecognizer::ResultFlag" flags="QGestureRecognizer::Result"/>
  <enum-type name="QGestureRecognizer::LineHeightTypes"/>
  <enum-type name="QStyle::RequestSoftwareInputPanel"/>
  <enum-type name="QSwipeGesture::SwipeDirection"/>
  <enum-type name="QTouchEvent::DeviceType"/>
  <enum-type name="QFont::HintingPreference"/>
  <enum-type name="QGesture::GestureCancelPolicy"/>
  <enum-type name="QTextDocument::Stacks"/>
  <enum-type name="QPainter::PixmapFragmentHint" flags="QPainter::PixmapFragmentHints"/>
  <enum-type name="QLineEdit::ActionPosition"/>
  <enum-type name="QTouchEvent::TouchPoint::InfoFlag" flags="QTouchEvent::TouchPoint::InfoFlags"/>
  <enum-type name="QStyleOptionViewItem::ViewItemPosition"/>
  <enum-type name="QAbstractScrollArea::SizeAdjustPolicy"/>
  <enum-type name="QFontDatabase::SystemFont"/>
  <enum-type name="QStyleOptionToolBox::SelectedPosition"/>
  <enum-type name="QStyleOptionToolBox::TabPosition"/>
  <enum-type name="QFileIconProvider::Option" flags="QFileIconProvider::Options"/>
  <enum-type name="QIconEngine::IconEngineHook"/>
  <enum-type name="QPagedPaintDevice::PageSize"/>

  <object-type name="QGestureRecognizer" force-abstract="yes"/>
  
  <value-type name="QPixmapCache::Key"/>
  <value-type name="QTileRules"/>
  <value-type name="QVector2D">
    <modify-function signature="operator[](int)" remove="all"/>
  </value-type>
  <value-type name="QVector3D">
    <modify-function signature="operator[](int)" remove="all"/>
  </value-type>
  <value-type name="QVector4D">
    <modify-function signature="operator[](int)" remove="all"/>
  </value-type>
  <value-type name="QTouchEvent::TouchPoint"/>


  <value-type name="QTransform">
    <modify-function signature="operator=(QTransform)" remove="all"/>
    <modify-function signature="map(int,int,int*,int*)const" remove="all"/>
    <modify-function signature="map(double,double,double*,double*)const" remove="all"/>

    <modify-function signature="operator*=(double)" access="private"/>
    <modify-function signature="operator+=(double)" access="private"/>
    <modify-function signature="operator-=(double)" access="private"/>
    <modify-function signature="operator/=(double)" access="private"/>
    <modify-function signature="operator*(QTransform)const" rename="multiplied"/>
    <modify-function signature="operator*=(QTransform)" access="private"/>
  
      <modify-function signature="inverted(bool*)const">
        <modify-argument index="1">
            <remove-argument/>
        </modify-argument>
      </modify-function>
  </value-type>

  <value-type name="QStyleOption" polymorphic-base="yes" polymorphic-id-expression="%1-&gt;type == QStyleOption::SO_Default">
      <modify-function signature="operator=(QStyleOption)" remove="all"/>
      <modify-function signature="init(const QWidget*)" remove="all"/> <!--### Obsolete in 4.3-->
  </value-type>
  <value-type name="QStyleOptionGraphicsItem" polymorphic-id-expression="%1-&gt;type == QStyleOptionGraphicsItem::Type &amp;&amp; %1-&gt;version == QStyleOptionGraphicsItem::Version"/>
  <value-type name="QStyleOptionSizeGrip" polymorphic-id-expression="%1-&gt;type == QStyleOptionSizeGrip::Type &amp;&amp; %1-&gt;version == QStyleOptionSizeGrip::Version"/>
  <value-type name="QStyleOptionButton" polymorphic-id-expression="%1-&gt;type == QStyleOptionButton::Type &amp;&amp; %1-&gt;version == QStyleOptionButton::Version"/>
  <value-type name="QStyleOptionComboBox" polymorphic-id-expression="%1-&gt;type == QStyleOptionComboBox::Type &amp;&amp; %1-&gt;version == QStyleOptionComboBox::Version"/>
  <value-type name="QStyleOptionComplex" generate="no" polymorphic-id-expression="%1-&gt;type == QStyleOptionComplex::Type &amp;&amp; %1-&gt;version == QStyleOptionComplex::Version"/>
  <value-type name="QStyleOptionDockWidget" polymorphic-id-expression="%1-&gt;type == QStyleOptionDockWidget::Type &amp;&amp; %1-&gt;version == QStyleOptionDockWidget::Version"/>
  <value-type name="QStyleOptionDockWidgetV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionDockWidgetV2::Type &amp;&amp; %1-&gt;version == QStyleOptionDockWidgetV2::Version">
      <modify-function signature="operator=(QStyleOptionDockWidget)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionFocusRect" polymorphic-id-expression="%1-&gt;type == QStyleOptionFocusRect::Type &amp;&amp; %1-&gt;version == QStyleOptionFocusRect::Version"/>
  <value-type name="QStyleOptionFrame" polymorphic-id-expression="%1-&gt;type == QStyleOptionFrame::Type &amp;&amp; %1-&gt;version == QStyleOptionFrame::Version"/>

  <value-type name="QStyleOptionFrameV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionFrameV2::Type &amp;&amp; %1-&gt;version == QStyleOptionFrameV2::Version">
    <modify-function signature="operator=(QStyleOptionFrame)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionFrameV3" polymorphic-id-expression="%1-&gt;type == QStyleOptionFrameV3::Type &amp;&amp; %1-&gt;version == QStyleOptionFrameV3::Version">
    <modify-function signature="operator=(QStyleOptionFrame)" remove="all"/>
  </value-type>

  <value-type name="QStyleOptionGroupBox" polymorphic-id-expression="%1-&gt;type == QStyleOptionGroupBox::Type &amp;&amp; %1-&gt;version == QStyleOptionGroupBox::Version"/>
  <value-type name="QStyleOptionHeader" polymorphic-id-expression="%1-&gt;type == QStyleOptionHeader::Type &amp;&amp; %1-&gt;version == QStyleOptionHeader::Version"/>
  <value-type name="QStyleOptionMenuItem" polymorphic-id-expression="%1-&gt;type == QStyleOptionMenuItem::Type &amp;&amp; %1-&gt;version == QStyleOptionMenuItem::Version"/>
  <value-type name="QStyleOptionProgressBar" polymorphic-id-expression="%1-&gt;type == QStyleOptionProgressBar::Type &amp;&amp; %1-&gt;version == QStyleOptionProgressBar::Version"/>

  <value-type name="QStyleOptionProgressBarV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionProgressBarV2::Type &amp;&amp; %1-&gt;version == QStyleOptionProgressBarV2::Version">
    <modify-function signature="operator=(QStyleOptionProgressBar)" remove="all"/>
  </value-type>

  <value-type name="QStyleOptionRubberBand" polymorphic-id-expression="%1-&gt;type == QStyleOptionRubberBand::Type &amp;&amp; %1-&gt;version == QStyleOptionRubberBand::Version"/>
  <value-type name="QStyleOptionSlider" polymorphic-id-expression="%1-&gt;type == QStyleOptionSlider::Type &amp;&amp; %1-&gt;version == QStyleOptionSlider::Version"/>
  <value-type name="QStyleOptionSpinBox" polymorphic-id-expression="%1-&gt;type == QStyleOptionSpinBox::Type &amp;&amp; %1-&gt;version == QStyleOptionSpinBox::Version"/>
  <value-type name="QStyleOptionTab" polymorphic-id-expression="%1-&gt;type == QStyleOptionTab::Type &amp;&amp; %1-&gt;version == QStyleOptionTab::Version"/>
  <value-type name="QStyleOptionTabV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabV2::Type &amp;&amp; %1-&gt;version == QStyleOptionTabV2::Version">
    <modify-function signature="operator=(const QStyleOptionTab &amp;)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionTabV3" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabV3::Type &amp;&amp; %1-&gt;version == QStyleOptionTabV3::Version">
    <modify-function signature="operator=(QStyleOptionTab)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionTabBarBase" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabBarBase::Type &amp;&amp; %1-&gt;version == QStyleOptionTabBarBase::Version"/>
  <value-type name="QStyleOptionTabBarBaseV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabBarBaseV2::Type &amp;&amp; %1-&gt;version == QStyleOptionTabBarBaseV2::Version">
    <modify-function signature="operator=(QStyleOptionTabBarBase)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionTabWidgetFrame" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabWidgetFrame::Type &amp;&amp; %1-&gt;version == QStyleOptionTabWidgetFrame::Version"/>
  <value-type name="QStyleOptionTabWidgetFrameV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionTabWidgetFrameV2::Type &amp;&amp; %1-&gt;version == QStyleOptionTabWidgetFrameV2::Version"/>
  <value-type name="QStyleOptionTitleBar" polymorphic-id-expression="%1-&gt;type == QStyleOptionTitleBar::Type &amp;&amp; %1-&gt;version == QStyleOptionTitleBar::Version"/>
  <value-type name="QStyleOptionToolBar" polymorphic-id-expression="%1-&gt;type == QStyleOptionToolBar::Type &amp;&amp; %1-&gt;version == QStyleOptionToolBar::Version"/>
  <value-type name="QStyleOptionToolBox" polymorphic-id-expression="%1-&gt;type == QStyleOptionToolBox::Type &amp;&amp; %1-&gt;version == QStyleOptionToolBox::Version"/>
  <value-type name="QStyleOptionToolBoxV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionToolBoxV2::Type &amp;&amp; %1-&gt;version == QStyleOptionToolBoxV2::Version">
    <modify-function signature="operator=(QStyleOptionToolBox)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionToolButton" polymorphic-id-expression="%1-&gt;type == QStyleOptionToolButton::Type &amp;&amp; %1-&gt;version == QStyleOptionToolButton::Version"/>
  <value-type name="QStyleOptionViewItem" polymorphic-id-expression="%1-&gt;type == QStyleOptionViewItem::Type &amp;&amp; %1-&gt;version == QStyleOptionViewItem::Version"/>
  <value-type name="QStyleOptionViewItemV2" polymorphic-id-expression="%1-&gt;type == QStyleOptionViewItemV2::Type &amp;&amp; %1-&gt;version == QStyleOptionViewItemV2::Version">
    <modify-function signature="operator=(QStyleOptionViewItem)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionViewItemV3" polymorphic-id-expression="%1-&gt;type == QStyleOptionViewItemV3::Type &amp;&amp; %1-&gt;version == QStyleOptionViewItemV3::Version">
    <modify-function signature="operator=(QStyleOptionViewItem)" remove="all"/>
  </value-type>
  <value-type name="QStyleOptionViewItemV4" polymorphic-id-expression="%1-&gt;type == QStyleOptionViewItemV4::Type &amp;&amp; %1-&gt;version == QStyleOptionViewItemV4::Version">
    <modify-function signature="operator=(QStyleOptionViewItem)" remove="all"/>
  </value-type>
  <value-type name="QTextFragment">
    <modify-function signature="operator=(QTextFragment)" remove="all"/>
  </value-type>
  <value-type name="QBitmap">
    <modify-function signature="operator=(const QPixmap &amp;)" remove="all"/>
    <modify-function signature="QBitmap(QString,const char*)" access="private">
    </modify-function>
  
    <modify-function signature="fromData(QSize,const uchar*,QImage::Format)" remove="all"/>
  </value-type>
  <value-type name="QTextInlineObject"/>
  <value-type name="QSizePolicy"/>
  <value-type name="QTableWidgetSelectionRange"/>
  <value-type name="QTextDocumentFragment">
    <modify-function signature="operator=(QTextDocumentFragment)" remove="all"/>
  </value-type>
  <value-type name="QTextOption">
    <modify-function signature="operator=(const QTextOption &amp;)" remove="all"/>
  </value-type>
  <value-type name="QTextLine">
    <modify-function signature="cursorToX(int*,QTextLine::Edge)const">
        <remove/>
    </modify-function>
  </value-type>
  <value-type name="QTextTableFormat"/>
  <value-type name="QTextImageFormat"/>
  <value-type name="QTextFrameFormat">
    <modify-function signature="isValid()const" access="non-final"/>
  </value-type>
  <value-type name="QTextLength"/>
  <value-type name="QItemSelectionRange">
      <modify-function signature="intersect(QItemSelectionRange)const" remove="all"/> <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QPainterPath">
    <modify-function signature="operator=(QPainterPath)" remove="all"/>
  </value-type>
  <value-type name="QPalette">
    <modify-function signature="operator=(const QPalette&amp;)" remove="all"/>

      <modify-function signature="QPalette(QColor, QColor, QColor, QColor, QColor, QColor, QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="background()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="foreground()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="serialNumber()const" remove="all"/> <!--### Obsolete in 4.3-->
  </value-type>
  <value-type name="QKeySequence">
    <modify-function signature="operator=(QKeySequence)" remove="all"/>
    <modify-function signature="operator int()const" access="private"/>
    <modify-function signature="operator[](uint)const" access="private"/>
  </value-type>

  <value-type name="QPicture">
    <modify-function signature="operator=(QPicture)" remove="all"/>
    <modify-function signature="pictureFormat(QString)">
        <remove/>
    </modify-function>

    <modify-function signature="inputFormatList()" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="inputFormats()" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="outputFormatList()" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="outputFormats()" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="setData(const char*,uint)" remove="all"/>

  </value-type>

  <value-type name="QRegion" expense-limit="4096">
    <modify-function signature="operator=(QRegion)" remove="all"/>
    <modify-function signature="operator&amp;=(QRegion)" remove="all"/>
    <modify-function signature="operator+=(QRegion)" remove="all"/>
    <modify-function signature="operator-=(QRegion)" remove="all"/>
    <modify-function signature="operator^=(QRegion)" remove="all"/>
    <modify-function signature="operator|=(QRegion)" remove="all"/>
    <modify-function signature="operator&amp;(QRegion)const" remove="all"/>
    <modify-function signature="operator+(QRegion)const" remove="all"/>
    <modify-function signature="operator-(QRegion)const" remove="all"/>
    <modify-function signature="operator^(QRegion)const" remove="all"/>
    <modify-function signature="operator|(QRegion)const" remove="all"/>
    <modify-function signature="eor(QRegion)const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="intersect(QRegion)const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="subtract(QRegion)const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="unite(QRegion)const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="operator&amp;=(QRect)" remove="all"/>
    <modify-function signature="operator+=(QRect)" remove="all"/>

  </value-type>

  <value-type name="QTextBlock">
    <modify-function signature="operator=(QTextBlock)" remove="all"/>
  </value-type>
  <value-type name="QTextBlockFormat"/>
  <value-type name="QTextTableCellFormat"/>
  <value-type name="QTextCharFormat">
    <modify-function signature="isValid()const" access="non-final"/>

      <modify-function signature="anchorName()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setAnchorName(QString)" remove="all"/> <!--### Obsolete in 4.3-->
  </value-type>
  <value-type name="QTextFormat">
    <modify-function signature="operator=(QTextFormat)" remove="all"/>
    <modify-function signature="isValid()const" access="non-final"/>

  
    <modify-function signature="setProperty(int,QVector&lt;QTextLength&gt;)" rename="setLengthVectorProperty"/>
  </value-type>

  <value-type name="QTextListFormat"/>
  <value-type name="QPolygon">
    <modify-function signature="QPolygon(int, const int *)" remove="all"/>
    <modify-function signature="operator+(QVector&lt;QPoint&gt;)const" remove="all"/>
    <modify-function signature="operator&lt;&lt;(QPoint)" remove="all"/>
    <modify-function signature="operator&lt;&lt;(QVector&lt;QPoint&gt;)" remove="all"/>


  </value-type>

  <value-type name="QPolygonF">
    <modify-function signature="operator+(QVector&lt;QPointF&gt;)const" remove="all"/>
    <modify-function signature="operator&lt;&lt;(QPointF)" remove="all"/>
    <modify-function signature="operator&lt;&lt;(QVector&lt;QPointF&gt;)" remove="all"/>
  </value-type>

  <value-type name="QIcon">
    <modify-function signature="operator=(QIcon)" remove="all"/>
    <modify-function signature="serialNumber()const" remove="all"/> <!--### Obsolete in 4.3-->

    <modify-function signature="QIcon(QIconEngineV2 *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QIcon(QIconEngine *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </value-type>

  <value-type name="QTextFrame::iterator">
    <include file-name="QTextFrame" location="global"/>
    <modify-function signature="operator++(int)" remove="all"/>
    <modify-function signature="operator--(int)" remove="all"/>
    <modify-function signature="operator=(QTextFrame::iterator)" remove="all"/>
    <modify-function signature="operator++()" access="private"/>
    <modify-function signature="operator--()" access="private"/>
  </value-type>

  <value-type name="QTreeWidgetItemIterator">
    <modify-function signature="operator=(QTreeWidgetItemIterator)" remove="all"/>
    <modify-function signature="operator++(int)" remove="all"/>
    <modify-function signature="operator--(int)" remove="all"/>
    <modify-function signature="operator+=(int)" access="private"/>
    <modify-function signature="operator-=(int)" access="private"/>
    <modify-function signature="operator++()" access="private"/>
    <modify-function signature="operator--()" access="private"/>
    <modify-function signature="operator*()const" access="private"/>
   </value-type>

  <value-type name="QTextBlock::iterator">
    <include file-name="QTextBlock" location="global"/>

    <modify-function signature="operator++()" access="private"/>
    <modify-function signature="operator--()" access="private"/>
    <modify-function signature="operator++(int)" remove="all"/>
    <modify-function signature="operator--(int)" remove="all"/>
   </value-type>

  <value-type name="QAbstractTextDocumentLayout::PaintContext">
    <include file-name="QAbstractTextDocumentLayout" location="global"/>
  </value-type>
  <value-type name="QAbstractTextDocumentLayout::Selection"/>

  <value-type name="QPixmap">
    <modify-function signature="operator=(QPixmap)" remove="all"/>
    <modify-function signature="operator!()const" remove="all"/>
    <modify-function signature="QPixmap(const char **)" remove="all"/>
    <modify-function signature="serialNumber()const" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="loadFromData(const uchar *,uint,const char *,QFlags&lt;Qt::ImageConversionFlag&gt;)" remove="all"/>
  </value-type>

  <value-type name="QTextCursor">
    <extra-includes>
        <include file-name="QTextBlock" location="global"/>
        <include file-name="QTextDocumentFragment" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QTextCursor)" remove="all"/>
    <modify-function signature="selectedTableCells(int*,int*,int*,int*)const" remove="all"/>
  </value-type>

  <value-type name="QTextLayout::FormatRange">
    <include file-name="QTextLayout" location="global"/>
  </value-type>

  <value-type name="QInputMethodEvent::Attribute">
    <include file-name="QInputMethodEvent" location="global"/>
  </value-type>

  <value-type name="QItemSelection">

    <modify-function signature="operator+(const QList&lt;QItemSelectionRange&gt;&amp;)const" remove="all"/>
    <modify-function signature="operator+=(const QList&lt;QItemSelectionRange&gt;&amp;)" remove="all"/>
    <modify-function signature="operator+=(const QItemSelectionRange&amp;)" remove="all"/>
    <modify-function signature="operator&lt;&lt;(const QList&lt;QItemSelectionRange&gt;&amp;)" remove="all"/>
    <modify-function signature="operator&lt;&lt;(QItemSelectionRange)" remove="all"/>
  </value-type>

  <value-type name="QMatrix4x4">
    <modify-function signature="data()const" remove="all"/>
    <modify-function signature="operator()(int, int)const" remove="all"/>
  </value-type>
  <value-type name="QMatrix">
      <extra-includes>
        <include file-name="QPainterPath" location="global"/>
      </extra-includes>

      <modify-function signature="map(int,int,int*,int*)const" remove="all"/>
      <modify-function signature="map(double,double,double*,double*)const" remove="all"/>
      <modify-function signature="operator=(QMatrix)" remove="all"/>

      <modify-function signature="operator*(QMatrix)const" access="private"/>
      <modify-function signature="operator*=(QMatrix)" access="private"/>
      <modify-function signature="rotate(double)" access="private" rename="rotate_private"/>
      <modify-function signature="scale(double,double)" access="private" rename="scale_private"/>
      <modify-function signature="shear(double,double)" access="private" rename="shear_private"/>
      <modify-function signature="translate(double,double)" access="private" rename="translate_private"/>
  </value-type>

  <value-type name="QConicalGradient" polymorphic-id-expression="%1-&gt;type() == QGradient::ConicalGradient">
  </value-type>

  <value-type name="QFontInfo" expense-cost="1" expense-limit="1000">
    <modify-function signature="operator=(QFontInfo)" remove="all"/>
  </value-type>

  <value-type name="QRadialGradient" polymorphic-id-expression="%1-&gt;type() == QGradient::RadialGradient">
  </value-type>

  <value-type name="QPainterPath::Element">
    <modify-field name="x" write="false"/>
    <modify-field name="y" write="false"/>
    <modify-field name="type" write="false"/>
    <include file-name="QPainterPath" location="global"/>
    <modify-function signature="operator QPointF()const" access="private"/>
  </value-type>

  <value-type name="QTextEdit::ExtraSelection">
    <include file-name="QTextEdit" location="global"/>
  </value-type>

  <value-type name="QFont" expense-cost="1" expense-limit="1000">
    <extra-includes>
        <include file-name="QStringList" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QFont)" remove="all"/>
  </value-type>

  <value-type name="QTextTableCell">
    <extra-includes>
        <include file-name="QTextCursor" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QTextTableCell)" remove="all"/>
  </value-type>

  <value-type name="QImage">
    <modify-function signature="QImage(const char *, const char *)">
        <remove/>
    </modify-function>
    <modify-function signature="QImage(const char **)">
      <remove/>
    </modify-function>
    <modify-function signature="QImage(const unsigned char*,int,int,int,QImage::Format)">
        <remove/>
    </modify-function>
    <modify-function signature="bits()const">
        <remove/>
    </modify-function>
    <modify-function signature="scanLine(int)const">
        <remove/>
    </modify-function>
    <modify-function signature="constBits()const">
        <remove/>
    </modify-function>
    <modify-function signature="constScanLine(int)const">
        <remove/>
    </modify-function>
    <modify-function signature="QImage(const unsigned char *, int, int, QImage::Format)">
        <remove/>
    </modify-function>

    <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="QMatrix" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QImage)" remove="all"/>

    <modify-function signature="setText(const char*,const char*,QString)">
        <remove/>
    </modify-function>

    <modify-function signature="text(const char*,const char*)const">
        <remove/>
    </modify-function>

    <modify-function signature="fromData(const unsigned char*,int,const char*)">
        <remove/>
    </modify-function>

      <modify-function signature="serialNumber()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="textLanguages()const" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="QImage(const char**)" remove="all"/>
    <modify-function signature="QImage(const uchar *,int,int,QImage::Format)" remove="all"/>
    <modify-function signature="QImage(const uchar *,int,int,int,QImage::Format)" remove="all"/>
    <modify-function signature="QImage(uchar *,int,int,QImage::Format)" remove="all"/>
    <modify-function signature="QImage(uchar *,int,int,int,QImage::Format)" remove="all"/>
    <modify-function signature="setColorTable(const QVector&lt;uint&gt;)" remove="all"/>
    <modify-function signature="loadFromData(const uchar *,int,const char *)" remove="all"/>
    <modify-function signature="fromData(const uchar *,int,const char *)" remove="all"/>
    <modify-function signature="bits()" remove="all"/>
    <modify-function signature="scanLine(int)" remove="all"/>

<inject-code class="pywrap-h">
QImage* new_QImage( const uchar * data, int width, int height, QImage::Format format )
{
  QImage* image = new QImage(width, height, format);
  memcpy(image-&gt;bits(), data, image-&gt;byteCount());
  return image;
}

PyObject* bits(QImage* image) {
  return PythonQtPrivate::wrapMemoryAsBuffer(image-&gt;bits(), image-&gt;bytesPerLine()* image-&gt;height());
}

#if QT_VERSION &gt;= QT_VERSION_CHECK(4,7,0)
PyObject* constBits(QImage* image) {
  return PythonQtPrivate::wrapMemoryAsBuffer(image-&gt;constBits(), image-&gt;byteCount());
}
#endif

PyObject* scanLine(QImage* image, int line) {
  return PythonQtPrivate::wrapMemoryAsBuffer(image-&gt;scanLine(line), image-&gt;bytesPerLine());
}

#if QT_VERSION &gt;= QT_VERSION_CHECK(4,7,0)
PyObject* constScanLine(QImage* image, int line) {
  return PythonQtPrivate::wrapMemoryAsBuffer(image-&gt;constScanLine(line), image-&gt;bytesPerLine());
}
#endif

</inject-code>  
  </value-type>

  <value-type name="QColormap">
    <modify-function signature="operator=(QColormap)" remove="all"/>
    <extra-includes>
        <include file-name="QColor" location="global"/>
    </extra-includes>
  </value-type>

  <value-type name="QCursor">
     <extra-includes>
        <include file-name="QPixmap" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QCursor)" remove="all"/>
  </value-type>

  <value-type name="QFontDatabase">
      <extra-includes>
        <include file-name="QStringList" location="global"/>
    </extra-includes>
  </value-type>

  <value-type name="QPen">
      <extra-includes>
        <include file-name="QBrush" location="global"/>
    </extra-includes>

    <modify-function signature="operator=(QPen)" remove="all"/>
  </value-type>

  <value-type name="QBrush">
    <modify-function signature="QBrush(Qt::GlobalColor, Qt::BrushStyle)" remove="all"/>
    <modify-function signature="operator=(const QBrush &amp;)" remove="all"/>

    <extra-includes>
        <include file-name="QPixmap" location="global"/>
    </extra-includes>
  </value-type>

  <value-type name="QColor">
    <modify-function signature="QColor(QColor::Spec)" remove="all"/>
    <modify-function signature="operator=(QColor)" remove="all"/>
    <modify-function signature="operator=(Qt::GlobalColor)" remove="all"/>

    <modify-function signature="QColor(const char*)">
        <remove/>
    </modify-function>

    <modify-function signature="getCmyk(int*,int*,int*,int*,int*)">
        <remove/>
    </modify-function>

    <modify-function signature="getCmykF(double*,double*,double*,double*,double*)">
        <remove/>
    </modify-function>

    <modify-function signature="getHsv(int*,int*,int*,int*)const">
        <remove/>
    </modify-function>

    <modify-function signature="getHsvF(double*,double*,double*,double*)const">
        <remove/>
    </modify-function>

    <modify-function signature="getRgb(int*,int*,int*,int*)const">
        <remove/>
    </modify-function>

    <modify-function signature="getRgbF(double*,double*,double*,double*)const">
        <remove/>
    </modify-function>

      <modify-function signature="dark(int)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="light(int)const" remove="all"/> <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QFontMetricsF" expense-cost="1" expense-limit="1000">
    <modify-function signature="operator!=(const QFontMetricsF &amp;)">
        <remove/>
    </modify-function>
    <modify-function signature="operator==(const QFontMetricsF &amp;)">
        <remove/>
    </modify-function>

    <modify-function signature="operator=(QFontMetrics)" remove="all"/>
    <modify-function signature="operator=(QFontMetricsF)" remove="all"/>
   
    <modify-function signature="QFontMetricsF(QFontMetricsF)" remove="all"/>
    <modify-function signature="QFontMetricsF(QFontMetrics)" remove="all"/>
    <modify-function signature="operator==(QFontMetricsF)const" remove="all"/>
    <modify-function signature="operator!=(QFontMetricsF)const" remove="all"/>
  </value-type>
   <value-type name="QTextOption::Tab"/>

  <value-type name="QFontMetrics" expense-cost="1" expense-limit="1000">
    <modify-function signature="operator!=(const QFontMetrics &amp;)">
        <remove/>
    </modify-function>
    <modify-function signature="operator==(const QFontMetrics &amp;)">
        <remove/>
    </modify-function>

    <modify-function signature="operator=(QFontMetrics)" remove="all"/>
  
    <modify-function signature="QFontMetrics(QFontMetrics)" remove="all"/>
    <modify-function signature="operator==(QFontMetrics)const" remove="all"/>
    <modify-function signature="operator!=(QFontMetrics)const" remove="all"/>
  </value-type>

  <value-type name="QGradient" force-abstract="yes" polymorphic-base="yes" polymorphic-id-expression="%1-&gt;type() == QGradient::NoGradient">
    <modify-function signature="operator==(const QGradient &amp;)">
        <remove/>
    </modify-function>
  </value-type>

  <value-type name="QLinearGradient" polymorphic-id-expression="%1-&gt;type() == QGradient::LinearGradient">
  </value-type>

  <value-type name="QPrinterInfo">
    <modify-function signature="operator=(const QPrinterInfo &amp;)" remove="all"/>
  </value-type>

  <value-type name="QMargins"/>

  <interface-type name="QLayoutItem"/>
  <interface-type name="QPaintDevice"/>

  <interface-type name="QGraphicsItem" polymorphic-base="yes">
    <modify-function signature="setParentItem(QGraphicsItem *)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="setCursorForItemOnly(QCursor)" remove="all"/>

    <modify-function signature="setMatrix(QMatrix, bool)" remove="all"/>
    <modify-function signature="toGraphicsObject() const" remove="all"/>

    <modify-function signature="children()const" remove="all"/>
    <modify-function signature="matrix()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="resetMatrix()" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="sceneMatrix()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="setMatrix(QMatrix, bool)" remove="all"/> <!--### Obsolete in 4.3-->
  </interface-type>

  <object-type name="QAbstractGraphicsShapeItem">
  </object-type>

  <object-type name="QAbstractItemView">

    <modify-function signature="setIndexWidget(const QModelIndex &amp;, QWidget *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    
      <modify-function signature="update()" remove="all"/>
      <modify-function signature="horizontalStepsPerItem()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setHorizontalStepsPerItem(int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setVerticalStepsPerItem(int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="verticalStepsPerItem()const" remove="all"/> <!--### Obsolete in 4.3-->

    <!-- ### because the CursorAction enum is protected -->
    <modify-function signature="moveCursor(QAbstractItemView::CursorAction,QFlags&lt;Qt::KeyboardModifier&gt;)" remove="all"/>
  </object-type>

  <object-type name="QAbstractPageSetupDialog"/>
  <object-type name="QAbstractPrintDialog"/>
  <object-type name="QAbstractSlider">
    <modify-function signature="sliderChange(QAbstractSlider::SliderChange)" remove="all"/>
  </object-type>
  <object-type name="QAbstractTextDocumentLayout">
  </object-type>
  
  <!-- Removed because of problems in Qt5.0
  <object-type name="QAccessible">
    <modify-function signature="initialize()" remove="all"/>
    <modify-function signature="cleanup()" remove="all"/>
  </object-type>
  <object-type name="QAccessibleBridge">
  </object-type>
  <object-type name="QAccessible2Interface"/>
  <object-type name="QAccessibleInterface">
  </object-type>
  <object-type name="QAccessibleInterfaceEx"/>
  <object-type name="QAccessibleObject"/>
  <object-type name="QAccessibleObjectEx"/>
  <object-type name="QAccessibleWidget"/>
  <object-type name="QAccessibleWidgetEx"/>
  -->
  <object-type name="QActionGroup"/>
  <object-type name="QCDEStyle">
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QCheckBox">
  </object-type>
  <object-type name="QCleanlooksStyle">
    <modify-function signature="standardPixmap(QStyle::StandardPixmap,const QStyleOption*,const QWidget*)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QCommonStyle">
      <modify-function signature="standardPixmap(QStyle::StandardPixmap, const QStyleOption*,const QWidget*)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QDataWidgetMapper">
  </object-type>
  <object-type name="QDateEdit"/>
  <object-type name="QDesktopServices">
  </object-type>
  <object-type name="QDialog">
    <modify-function signature="setExtension(QWidget*)" remove="all"/>
    <modify-function signature="exec()" access="non-final"/>
    <modify-function signature="extension()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="orientation()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="open()" virtual-slot="yes"/>
    <modify-function signature="setOrientation(Qt::Orientation)" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="showExtension(bool)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>
  <object-type name="QDialogButtonBox">
    <modify-function signature="addButton(QAbstractButton*,QDialogButtonBox::ButtonRole)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeButton(QAbstractButton*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
  </object-type>
  <object-type name="QDirModel">
     <modify-function signature="parent()const" remove="all"/>
  </object-type>
  <object-type name="QDoubleValidator"/>
  <object-type name="QFileIconProvider"/>
  <object-type name="QWizard">
    <!-- ### Requires correct class name in meta object -->
    <modify-function signature="setDefaultProperty(const char *, const char *, const char *)" remove="all"/>
  </object-type>
  <object-type name="QWizardPage">
  </object-type>
  <object-type name="QFocusFrame">
  </object-type>
  <object-type name="QFontComboBox"/>
  <object-type name="QFontDialog">
  </object-type>

  <object-type name="QGraphicsEllipseItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsEllipseItem::Type" />
  <object-type name="QGraphicsItemAnimation">
    <extra-includes>
        <include file-name="QPair" location="global"/>
    </extra-includes>
  </object-type>
  <object-type name="QGraphicsItemGroup"
  polymorphic-id-expression="%1-&gt;type() == QGraphicsItemGroup::Type">
  </object-type>
  <object-type name="QGraphicsLineItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsLineItem::Type">
  </object-type>
  <object-type name="QGraphicsPathItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsPathItem::Type"/>

  <object-type name="QGraphicsPixmapItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsPixmapItem::Type">
  </object-type>
  <object-type name="QGraphicsPolygonItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsPolygonItem::Type"/>
  <object-type name="QGraphicsRectItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsRectItem::Type"/>
  <object-type name="QGraphicsSimpleTextItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsSimpleTextItem::Type"/>
  <object-type name="QHBoxLayout"/>
  <object-type name="QHeaderView">
  </object-type>
  <object-type name="QIconEngine">
  </object-type>
  <object-type name="QIconEngineV2">
    <modify-function signature="virtual_hook(int,void*)" remove="all"/>
  </object-type>
  <object-type name="QImageWriter">
      <modify-function signature="description()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setDescription(QString)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>
  <object-type name="QInputContextFactory"/>
  <object-type name="QIntValidator"/>
  <object-type name="QItemDelegate">
    <modify-function signature="doLayout(QStyleOptionViewItem,QRect*,QRect*,QRect*,bool)const">
        <remove/>
    </modify-function>

    <modify-function signature="selected(QPixmap,QPalette,bool)const">
        <remove/>
    </modify-function>
  </object-type>
  <object-type name="QItemEditorCreatorBase"/>
  <object-type name="QItemEditorFactory">
  </object-type>
  <object-type name="QItemSelectionModel"/>
  <object-type name="QTreeModel"/>
  <object-type name="QListView"/>
  <object-type name="QColumnView">
  </object-type>
  <object-type name="QMainWindow">
  </object-type>
  <object-type name="QMdiArea">
  </object-type>
  <object-type name="QMdiSubWindow">
  </object-type>
  <object-type name="QMenu">
    <modify-function signature="setNoReplayFor(QWidget*)">
        <remove/>
    </modify-function>
  
  <inject-code class="pywrap-h">
  QAction* addAction (QMenu* menu, const QString &amp; text, PyObject* callable, const QKeySequence &amp; shortcut = 0) {
    QAction* a = menu-&gt;addAction(text);
    a-&gt;setShortcut(shortcut);
    PythonQt::self()-&gt;addSignalHandler(a, SIGNAL(triggered(bool)), callable);
    return a;
  }
  
  QAction* addAction (QMenu* menu, const QIcon&amp; icon, const QString&amp; text, PyObject* callable, const QKeySequence&amp; shortcut = 0)
  {
    QAction* a = menu-&gt;addAction(text);
    a-&gt;setIcon(icon);
    a-&gt;setShortcut(shortcut);
    PythonQt::self()-&gt;addSignalHandler(a, SIGNAL(triggered(bool)), callable);
    return a;
  }
  </inject-code>
  </object-type>

  <object-type name="QMenuBar">

  <inject-code class="pywrap-h">
  QAction* addAction (QMenuBar* menu, const QString &amp; text, PyObject* callable)
  {
    QAction* a = menu-&gt;addAction(text);
    PythonQt::self()-&gt;addSignalHandler(a, SIGNAL(triggered(bool)), callable);
    return a;
  }
  </inject-code>
  </object-type>
  <object-type name="QMotifStyle">
    <modify-function signature="standardPixmap(QStyle::StandardPixmap, const QStyleOption*, const QWidget*)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QPainterPathStroker"/>

  <object-type name="QPictureIO">
  </object-type>

  <object-type name="QPixmapCache">
    <modify-function signature="find(QString)">
        <remove/>
    </modify-function>
    <modify-function signature="find(QString,QPixmap*)" remove="all"/>
  </object-type>
  <object-type name="QPlastiqueStyle">
    <modify-function signature="standardPixmap(QStyle::StandardPixmap, const QStyleOption*, const QWidget*)const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
    <modify-function signature="layoutSpacingImplementation(QSizePolicy::ControlType, QSizePolicy::ControlType, Qt::Orientation, const QStyleOption *, const QWidget *) const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QPrintDialog">
  </object-type>
  <object-type name="QPrintEngine"/>
  <object-type name="QProgressBar">
  </object-type>
  <object-type name="QPushButton">
  </object-type>
  <object-type name="QRegExpValidator"/>
  <object-type name="QScrollArea">
    <modify-function signature="setWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  <object-type name="QSessionManager"/>
  <object-type name="QShortcut">
  </object-type>
  <object-type name="QSizeGrip"/>
  <object-type name="QSound"/>
  <enum-type name="QSound::Loop"/>
  <object-type name="QSpacerItem"/>
  <object-type name="QStandardItem">
    <modify-function signature="appendColumn(const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="appendRow(const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="appendRow(QStandardItem *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="appendRows(const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertColumn(int, const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int, const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRows(int, const QList&lt;QStandardItem *&gt; &amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setChild(int, int, QStandardItem *)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setChild(int, QStandardItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="takeChild(int, int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="operator=(QStandardItem)" remove="all"/>
  
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="operator=(QStandardItem)" remove="all"/>
    <modify-function signature="operator&lt;(QStandardItem)const" remove="all"/>
  </object-type>
  <object-type name="QStatusBar">
    <modify-function signature="addWidget(QWidget*, int)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addPermanentWidget(QWidget*, int)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertWidget(int, QWidget*, int)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertPermanentWidget(int, QWidget*, int)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  <object-type name="QStringListModel"/>
  <object-type name="QStyleFactory"/>
  <object-type name="QStyleHintReturn"/>
  <object-type name="QStyleHintReturnVariant"/>
  <object-type name="QStyleHintReturnMask"/>
  <object-type name="QStylePainter"/>
  <object-type name="QSyntaxHighlighter">
  </object-type>
  <object-type name="QSystemTrayIcon">
  </object-type>
  <object-type name="QTableView">
      <modify-function signature="sortByColumn(int)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>
  <object-type name="QTextBlockGroup"/>
  <object-type name="QTextBlockUserData"/>
  <object-type name="QTextItem"/>
  <object-type name="QTextList">
    <modify-function signature="format()const" rename="textListFormat"/>

      <modify-function signature="isEmpty()const" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>
  <object-type name="QTextObject"/>
    
  <object-type name="QTimeEdit"/>
  <object-type name="QToolBox">
    <modify-function signature="addItem(QWidget*, const QIcon&amp;, const QString&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addItem(QWidget*, const QString&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertItem(int, QWidget*, const QIcon&amp;, const QString&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertItem(int, QWidget*, const QString&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  <object-type name="QToolButton">
  </object-type>
  <object-type name="QToolTip"/>
  <object-type name="QTreeView">
      <modify-function signature="sortByColumn(int)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>
  <object-type name="QUndoCommand">
  </object-type>
  <object-type name="QUndoGroup">
  </object-type>

  <object-type name="QUndoStack"/>

  <object-type name="QUndoView">
  </object-type>
  <object-type name="QVBoxLayout"/>
  <object-type name="QValidator"/>
  <object-type name="QWhatsThis"/>
  <object-type name="QWidgetAction">
  </object-type>
  <object-type name="QWidgetItem"/>
  <object-type name="QWindowsStyle">
      <modify-function signature="standardPixmap(QStyle::StandardPixmap, const QStyleOption*, const QWidget*)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
  </object-type>
  <object-type name="QWorkspace">
  </object-type>

  <object-type name="QActionEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ActionAdded || %1-&gt;type() == QEvent::ActionRemoved || %1-&gt;type() == QEvent::ActionChanged"/>
  <object-type name="QClipboardEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Clipboard"/>
  <object-type name="QCloseEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Close"/>
  <object-type name="QContextMenuEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ContextMenu"/>
  <object-type name="QDragEnterEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::DragEnter"/>
  <object-type name="QDragLeaveEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::DragLeave"/>
  <object-type name="QDragMoveEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::DragMove">
    <modify-function signature="accept()" remove="all"/>
    <modify-function signature="ignore()" remove="all"/>
  </object-type>
  <object-type name="QDropEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Drop">
    <modify-function signature="encodedData(const char*)const">
        <remove/>
    </modify-function>

    <modify-function signature="format(int)const">
        <remove/>
    </modify-function>

    <modify-function signature="provides(const char*)const">
        <remove/>
    </modify-function>
  </object-type>

  <object-type name="QFileOpenEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::FileOpen"/>
  <object-type name="QFocusEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::FocusIn || %1-&gt;type() == QEvent::FocusOut">
        <modify-function signature="reason()const">
            <remove/>
        </modify-function>
  </object-type>

  <object-type name="QGraphicsSceneContextMenuEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneContextMenu"/>
  <object-type name="QGraphicsSceneDragDropEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneDragEnter || %1-&gt;type() == QEvent::GraphicsSceneDragLeave || %1-&gt;type() == QEvent::GraphicsSceneDragMove || %1-&gt;type() == QEvent::GraphicsSceneDrop">
    <modify-function signature="setMimeData(const QMimeData *)">
        <remove/>
    </modify-function>
    <modify-function signature="setSource(QWidget *)">
        <remove/>
    </modify-function>
  </object-type>
  <object-type name="QGraphicsSceneEvent">
    <modify-function signature="setWidget(QWidget *)">
        <remove/>
    </modify-function>
  </object-type>
  <object-type name="QGraphicsSceneMoveEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneMove"/>
  <object-type name="QGraphicsSceneResizeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneResize"/>
  <object-type name="QGraphicsSceneHelpEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneHelp"/>
  <object-type name="QGraphicsSceneHoverEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneHoverEnter || %1-&gt;type() == QEvent::GraphicsSceneHoverLeave || %1-&gt;type() == QEvent::GraphicsSceneHoverMove"/>
  <object-type name="QGraphicsSceneMouseEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneMouseDoubleClick || %1-&gt;type() == QEvent::GraphicsSceneMouseMove || %1-&gt;type() == QEvent::GraphicsSceneMousePress || %1-&gt;type() == QEvent::GraphicsSceneMouseRelease"/>
  <object-type name="QGraphicsSceneWheelEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::GraphicsSceneWheel"/>
  <object-type name="QHelpEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ToolTip || %1-&gt;type() == QEvent::WhatsThis"/>
  <object-type name="QHideEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Hide"/>
  <object-type name="QHoverEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::HoverEnter || %1-&gt;type() == QEvent::HoverLeave || %1-&gt;type() == QEvent::HoverMove"/>
  <object-type name="QIconDragEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::IconDrag"/>
  <object-type name="QInputMethodEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::InputMethod"/>
  <object-type name="QMoveEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Move"/>
  <object-type name="QResizeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Resize"/>
  <object-type name="QShortcutEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Shortcut">
        <!-- All these have const overloads that are used instead -->
        <modify-function signature="isAmbiguous()">
            <remove/>
        </modify-function>
        <modify-function signature="shortcutId()">
            <remove/>
        </modify-function>
        <modify-function signature="key()">
            <remove/>
        </modify-function>
  </object-type>
  <object-type name="QShowEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Show"/>
  <object-type name="QStatusTipEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::StatusTip"/>
  <object-type name="QTabletEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::TabletMove || %1-&gt;type() == QEvent::TabletPress || %1-&gt;type() == QEvent::TabletRelease"/>
  <object-type name="QToolBarChangeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ToolBarChange"/>
  <object-type name="QWhatsThisClickedEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::WhatsThisClicked"/>
  <object-type name="QWheelEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Wheel"/>
  <object-type name="QWindowStateChangeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::WindowStateChange"/>
  <object-type name="QDragResponseEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::DragResponse"/>
  <object-type name="QInputEvent">
    <modify-function signature="modifiers()const" access="non-final"/>
  </object-type>
  <object-type name="QGestureEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Gesture || %1-&gt;type() == QEvent::GestureOverride"/>
  <object-type name="QKeyEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::KeyPress || %1-&gt;type() == QEvent::KeyRelease"/>
  <object-type name="QMouseEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::MouseButtonDblClick || %1-&gt;type() == QEvent::MouseButtonPress || %1-&gt;type() == QEvent::MouseButtonRelease || %1-&gt;type() == QEvent::MouseMove"/>
  <object-type name="QPaintEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Paint"/>
  <object-type name="QAccessibleEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::AccessibilityDescription || %1-&gt;type() == QEvent::AccessibilityHelp"/>

  <object-type name="QAbstractButton"/>

  <object-type name="QStyle">
      <modify-function signature="standardIconImplementation(QStyle::StandardPixmap, const QStyleOption *, const QWidget *)const" virtual-slot="yes"/>
      <modify-function signature="layoutSpacingImplementation(QSizePolicy::ControlType, QSizePolicy::ControlType, Qt::Orientation, const QStyleOption *, const QWidget *) const" virtual-slot="yes"/>
      <modify-function signature="itemTextRect(QFontMetrics,QRect,int,bool,QString)const" remove="all"/>
  </object-type>

  <object-type name="QColorDialog">

    <modify-function signature="getColor(const QColor &amp;, QWidget *)">
    </modify-function>
  </object-type>

  <object-type name="QLayout">

    <modify-function signature="removeWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeItem(QLayoutItem*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="takeAt(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="addItem(QLayoutItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="addWidget(QWidget *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addChildWidget(QWidget *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addChildLayout(QLayout*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setSpacing(int)" rename="setWidgetSpacing"/>
    <modify-function signature="spacing()const" rename="widgetSpacing"/>
    <modify-function signature="getContentsMargins(int*,int*,int*,int*)const" remove="all"/>

    <modify-function signature="margin()const" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QStackedLayout">
    <modify-function signature="insertWidget(int,QWidget*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QBoxLayout">
    <modify-function signature="addWidget(QWidget *, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="addLayout(QLayout *, int)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertWidget(int, QWidget *, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertLayout(int, QLayout *, int)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertItem(int, QLayoutItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addSpacerItem(QSpacerItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertSpacerItem(int,QSpacerItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QGridLayout">
    <modify-function signature="addWidget(QWidget *, int, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addWidget(QWidget *, int, int, int, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addLayout(QLayout *, int, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addLayout(QLayout *, int, int, int, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addItem(QLayoutItem *, int, int, int, int, QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="addWidget(QWidget *)" remove="all"/>
    <modify-function signature="getItemPosition(int,int*,int*,int*,int*)" remove="all"/>
  </object-type>

  <object-type name="QGraphicsView">
    <extra-includes>
      <include file-name="QPainterPath" location="global"/>
      <include file-name="QVarLengthArray" location="global"/>
    </extra-includes>
    <modify-function signature="setupViewport(QWidget *)" access="non-final"/>
  </object-type>

  <object-type name="QInputDialog">
  </object-type>


  <object-type name="QGraphicsScene">
    <extra-includes>
        <include file-name="QVarLengthArray" location="global"/>
    </extra-includes>
    <modify-function signature="addItem(QGraphicsItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addWidget(QWidget*,QFlags&lt;Qt::WindowType&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeItem(QGraphicsItem*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
  </object-type>


  <object-type name="QCalendarWidget">
    <extra-includes>
      <include file-name="QTextCharFormat" location="global"/>
    </extra-includes>

      <modify-function signature="isHeaderVisible()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setHeaderVisible(bool)" remove="all"/> <!--### Obsolete in 4.3-->
  
      <modify-function signature="sizeHint()const" rename="getSizeHint"/>
      <modify-function signature="minimumSizeHint()const" rename="getMinimumSizeHint"/>
  </object-type>

  <object-type name="QTreeWidget">

    <modify-function signature="addTopLevelItem(QTreeWidgetItem *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addTopLevelItems(const QList&lt;QTreeWidgetItem*&gt; &amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertTopLevelItem(int, QTreeWidgetItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertTopLevelItems(int, const QList&lt;QTreeWidgetItem*&gt; &amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setHeaderItem(QTreeWidgetItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeTopLevelItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="isSortingEnabled()const" remove="all"/>
    <modify-function signature="setSortingEnabled(bool)" remove="all"/>
    <modify-function signature="indexOfTopLevelItem(QTreeWidgetItem *)">
        <remove/>
    </modify-function>
    <modify-function signature="setItemExpanded(const QTreeWidgetItem*,bool)">
        <remove/>
    </modify-function>
    <modify-function signature="isItemExpanded(const QTreeWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="setItemHidden(const QTreeWidgetItem*,bool)">
        <remove/>
    </modify-function>
    <modify-function signature="isItemHidden(const QTreeWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="isItemSelected(const QTreeWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="setItemSelected(const QTreeWidgetItem*,bool)">
        <remove/>
    </modify-function>
      <modify-function signature="items(const QMimeData*)const" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="mimeData(const QList&lt;QTreeWidgetItem*&gt;)const" remove="all"/>
  </object-type>

  <object-type name="QAbstractItemDelegate">
      <modify-function signature="elidedText(QFontMetrics, int, Qt::TextElideMode, QString)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QTableWidgetItem">
    <modify-function signature="operator=(const QTableWidgetItem&amp;)" remove="all"/>
      <modify-function signature="backgroundColor()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setBackgroundColor(QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setTextColor(QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="textColor()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QTableWidgetItem(QTableWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QTableWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QTableWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QListWidgetItem">

    <modify-function signature="QListWidgetItem(const QString&amp;, QListWidget*, int)">
      <modify-argument index="2">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QListWidgetItem(const QIcon&amp;, const QString&amp;, QListWidget*, int)">
      <modify-argument index="3">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QListWidgetItem(QListWidget*, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="operator=(const QListWidgetItem&amp;)" remove="all"/>
      <modify-function signature="backgroundColor()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setBackgroundColor(QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setTextColor(QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="textColor()const" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QListWidgetItem(QListWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QListWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QListWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QGraphicsTextItem" polymorphic-id-expression="%1-&gt;type() == QGraphicsTextItem::Type"> <!-- a QObject so main-thread delete redundant -->
    <extra-includes>
      <include file-name="QTextCursor" location="global"/>
    </extra-includes>
 </object-type>

  <object-type name="QCompleter">
    <modify-function signature="setModel(QAbstractItemModel*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setPopup(QAbstractItemView*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>


  <object-type name="QTreeWidgetItem">

    <modify-function signature="QTreeWidgetItem(QTreeWidget*, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QTreeWidgetItem(QTreeWidget*, const QStringList&amp;, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QTreeWidgetItem(QTreeWidget*, QTreeWidgetItem*, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QTreeWidgetItem(QTreeWidgetItem *,int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QTreeWidgetItem(QTreeWidgetItem*, const QStringList &amp;, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="QTreeWidgetItem(QTreeWidgetItem*, QTreeWidgetItem*, int)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addChild(QTreeWidgetItem *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addChildren(const QList&lt;QTreeWidgetItem*&gt; &amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertChild(int, QTreeWidgetItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertChildren(int, const QList&lt;QTreeWidgetItem*&gt; &amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeChild(QTreeWidgetItem*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeChild(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeChildren()">
      <modify-argument index="return">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="QTreeWidgetItem(const QTreeWidgetItem &amp;)" remove="all"/>
    <modify-function signature="operator=(const QTreeWidgetItem&amp;)" remove="all"/>

      <modify-function signature="backgroundColor(int)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setBackgroundColor(int, QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setTextColor(int, QColor)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="textColor(int)const" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QTreeWidgetItem(QTreeWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QTreeWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QTreeWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QListWidget">

    <modify-function signature="setItemWidget(QListWidgetItem *, QWidget *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addItem(QListWidgetItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertItem(int, QListWidgetItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="takeItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="setItemHidden(const QListWidgetItem*,bool)">
        <remove/>
    </modify-function>
    <modify-function signature="isItemHidden(const QListWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="setItemSelected(const QListWidgetItem*,bool)">
        <remove/>
    </modify-function>
    <modify-function signature="isItemSelected(const QListWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="mimeData(const QList&lt;QListWidgetItem*&gt;)const" remove="all"/>
  </object-type>

  <object-type name="QWidget">
    <extra-includes>
        <include file-name="QIcon" location="global"/>
        <include file-name="QMessageBox" location="global"/>
    </extra-includes>

    <modify-function signature="setLayout(QLayout *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setParent(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setParent(QWidget*, QFlags&lt;Qt::WindowType&gt;)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>

    <modify-function signature="getContentsMargins(int*,int*,int*,int*)const" remove="all"/>
      <modify-function signature="enabledChange(bool)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="fontChange(QFont)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="isEnabledToTLW()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="isTopLevel()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="paletteChange(QPalette)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setShown(bool)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="topLevelWidget()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="windowActivationChange(bool)" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="fontInfo()const" remove="all"/>
    <modify-function signature="fontMetrics()const" remove="all"/>
    <modify-function signature="sizeHint()const" rename="getSizeHint"/>
    <modify-function signature="minimumSizeHint()const" rename="getMinimumSizeHint"/>
  </object-type>

  <object-type name="QMessageBox">


    <modify-function signature="setWindowTitle(const QString &amp;)" remove="all"/>
    <modify-function signature="setWindowModality(Qt::WindowModality)" remove="all"/>
    <extra-includes>
        <include file-name="QPixmap" location="global"/>
    </extra-includes>

      <modify-function signature="QMessageBox(QString,QString,QMessageBox::Icon,int,int,int,QWidget*,QFlags&lt;Qt::WindowType&gt;)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="buttonText(int)const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setButtonText(int, QString)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="standardIcon(QMessageBox::Icon)" remove="all"/> <!--### Obsolete in 4.3-->

      <modify-function signature="critical(QWidget*,QString,QString,int,int,int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="critical(QWidget*,QString,QString,QString,QString,QString,int,int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="information(QWidget*,QString,QString,int,int,int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="information(QWidget*,QString,QString,QString,QString,QString,int,int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="question(QWidget*, QString, QString, int, int, int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="question(QWidget*, QString, QString, QString, QString, QString, int, int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="warning(QWidget*, QString, QString, int, int, int)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="warning(QWidget*, QString, QString, QString, QString, QString, int, int)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QAbstractSpinBox">
  </object-type>

  <object-type name="QTextFrame">
    <extra-includes>
        <include file-name="QTextCursor" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QImageIOHandler">
    <extra-includes>
        <include file-name="QRect" location="global"/>
    </extra-includes>
    <modify-function signature="setFormat(const QByteArray &amp;)const">
        <remove/>
    </modify-function>

      <modify-function signature="name()const" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QProxyModel">
    <modify-function signature="parent()const" remove="all"/>
    <extra-includes>
        <include file-name="QPixmap" location="global"/>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QImageReader">
    <extra-includes>
        <include file-name="QColor" location="global"/>
        <include file-name="QRect" location="global"/>
        <include file-name="QSize" location="global"/>
        <include file-name="QStringList" location="global"/>
        <include file-name="QImage" location="global"/>
    </extra-includes>
    <modify-function signature="read(QImage*) ">
        <remove/>
    </modify-function>
  </object-type>

  <object-type name="QMovie">
    <extra-includes>
        <include file-name="QColor" location="global"/>
        <include file-name="QImage" location="global"/>
        <include file-name="QPixmap" location="global"/>
        <include file-name="QRect" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>
    <modify-function signature="cacheMode()">
        <remove/>
    </modify-function>
  </object-type>

  <object-type name="QPageSetupDialog"/>

  <object-type name="QTabWidget">
    <modify-function signature="addTab(QWidget*, const QString&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addTab(QWidget*, const QIcon&amp;, const QString&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertTab(int, QWidget*, const QIcon&amp;, const QString&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertTab(int, QWidget*, const QString&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setCornerWidget(QWidget*, Qt::Corner)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setTabBar(QTabBar*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <!-- TODO!
    <modify-function signature="removeTab(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    -->
  </object-type>
  <object-type name="QDrag">
    <extra-includes>
        <include file-name="QPoint" location="global"/>
        <include file-name="QPixmap" location="global"/>
    </extra-includes>
    
    <modify-function signature="setMimeData(QMimeData*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="start(QFlags&lt;Qt::DropAction&gt;)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QDateTimeEdit">
  </object-type>

  <object-type name="QSortFilterProxyModel">
     <modify-function signature="parent()const" remove="all"/>
    <extra-includes>
        <include file-name="QItemSelection" location="global"/>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>

      <modify-function signature="clear()" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="filterChanged()" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QSlider">
  </object-type>

  <object-type name="QInputContext">
    <extra-includes>
        <include file-name="QTextFormat" location="global"/>
    </extra-includes>
    <modify-function signature="setFocusWidget(QWidget*)">
        <remove/>
    </modify-function>
  </object-type>

  <object-type name="QProgressDialog">
  </object-type>

  <object-type name="QLabel">
  </object-type>

  <object-type name="QFileDialog">
    <extra-includes>
        <include file-name="QUrl" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QErrorMessage"/>

  <object-type name="QTabBar">
    <extra-includes>
        <include file-name="QIcon" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QStandardItemModel">
    <modify-function signature="takeItem(int,int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeHorizontalHeaderItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeVerticalHeaderItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="appendRow(const QList&lt;QStandardItem*&gt;&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="appendRow(QStandardItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertRow(int, QStandardItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setHorizontalHeaderItem(int, QStandardItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setItem(int, int, QStandardItem*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setItem(int, QStandardItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setItemPrototype(const QStandardItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setVerticalHeaderItem(int, QStandardItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="takeColumn(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="takeRow(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertColumn(int, const QList&lt;QStandardItem*&gt;&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertRow(int, const QList&lt;QStandardItem*&gt;&amp;)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="appendColumn(const QList&lt;QStandardItem*&gt;&amp;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>

    <modify-function signature="insertColumn(int,const QModelIndex &amp;)" remove="all"/>
    <modify-function signature="insertRow(int,const QModelIndex &amp;)" remove="all"/>
    <modify-function signature="parent()const" remove="all"/>
    <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QRadioButton">
  </object-type>

  <object-type name="QScrollBar">
  </object-type>

  <object-type name="QClipboard">
    <extra-includes>
        <include file-name="QImage" location="global"/>
        <include file-name="QPixmap" location="global"/>
    </extra-includes>
    
    <modify-function signature="setMimeData(QMimeData *, QClipboard::Mode)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="event(QEvent*)" remove="all"/>
    <modify-function signature="connectNotify(const char*)" remove="all"/>
  </object-type>

  <object-type name="QAbstractScrollArea">
    <modify-function signature="setupViewport(QWidget *)" access="non-final"/>

    <modify-function signature="setViewport(QWidget *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addScrollBarWidget(QWidget*,QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setCornerWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setHorizontalScrollBar(QScrollBar*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setVerticalScrollBar(QScrollBar*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QPaintEngineState">
    <extra-includes>
        <include file-name="QPainterPath" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QRubberBand">
  </object-type>

  <object-type name="QTextLayout">
    <extra-includes>
        <include file-name="QTextOption" location="global"/>
    </extra-includes>
    <modify-function signature="draw(QPainter*,const QPointF &amp;,const QVector&lt;QTextLayout::FormatRange&gt;  &amp;,const QRectF &amp;)const">
      <modify-argument index="3">
        <replace-default-expression with="QVector&lt;QTextLayout::FormatRange&gt;()"/>
      </modify-argument>
     </modify-function>
  </object-type>

  <object-type name="QTableWidget">

    <modify-function signature="setHorizontalHeaderItem(int, QTableWidgetItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setItem(int, int, QTableWidgetItem *)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeHorizontalHeaderItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeVerticalHeaderItem(int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="takeItem(int,int)">
      <modify-argument index="return">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setItemPrototype(const QTableWidgetItem *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setVerticalHeaderItem(int, QTableWidgetItem *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setCellWidget(int,int,QWidget*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    
    <modify-function signature="isSortingEnabled()const" remove="all"/>
    <modify-function signature="setSortingEnabled(bool)" remove="all"/>
    <modify-function signature="setItemSelected(const QTableWidgetItem*,bool)">
        <remove/>
    </modify-function>
    <modify-function signature="isItemSelected(const QTableWidgetItem*)const">
        <remove/>
    </modify-function>
    <modify-function signature="mimeData(const QList&lt;QTableWidgetItem*&gt;)const" remove="all"/>
  </object-type>
  <object-type name="QTextDocument">
    <extra-includes>
        <include file-name="QTextBlock" location="global"/>
        <include file-name="QTextFormat" location="global"/>
        <include file-name="QTextCursor" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QTextDocumentWriter">
  </object-type>

  <object-type name="QSplitter">

    <modify-function signature="getRange(int,int*,int*)const" remove="all"/>
    
    <modify-function signature="addWidget(QWidget *)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertWidget(int, QWidget *)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QGroupBox">
  </object-type>

  <object-type name="QStackedWidget">
    <modify-function signature="addWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertWidget(int,QWidget*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QSplitterHandle">
  </object-type>

  <object-type name="QDial">
  </object-type>

  <object-type name="QLineEdit">
  </object-type>

  <object-type name="QLCDNumber"/>

  <object-type name="QSplashScreen">
    <modify-function signature="repaint()" remove="all"/>
  </object-type>

  <object-type name="QDockWidget">
  </object-type>

  <object-type name="QAbstractProxyModel">
    <extra-includes>
        <include file-name="QItemSelection" location="global"/>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QDesktopWidget">
  </object-type>

  <object-type name="QFrame">
  </object-type>

  <object-type name="QTextTable">
    <extra-includes>
        <include file-name="QTextCursor" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QSpinBox">
  </object-type>

  <object-type name="QTextBrowser">
  </object-type>

  <object-type name="QDoubleSpinBox">
  </object-type>

  <object-type name="QButtonGroup">
  </object-type>

  <object-type name="QToolBar">

    <inject-code class="pywrap-h">
  QAction* addAction (QToolBar* menu, const QString &amp; text, PyObject* callable)
  {
    QAction* a = menu-&gt;addAction(text);
    PythonQt::self()-&gt;addSignalHandler(a, SIGNAL(triggered(bool)), callable);
    return a;
  }
  
  QAction* addAction (QToolBar* menu, const QIcon&amp; icon, const QString&amp; text, PyObject* callable)
  {
    QAction* a = menu-&gt;addAction(text);
    a-&gt;setIcon(icon);
    PythonQt::self()-&gt;addSignalHandler(a, SIGNAL(triggered(bool)), callable);
    return a;
  }
  </inject-code>
  </object-type>

  <object-type name="QPaintEngine">

    <extra-includes>
        <include file-name="QVarLengthArray" location="global"/>
    </extra-includes>
    <modify-function signature="setPaintDevice(QPaintDevice*)">
        <remove/>
    </modify-function>
    <modify-field name="state" read="false" write="false"/>
  </object-type>

  <object-type name="QAbstractTableModel">
    <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QGuiSignalMapper"/>

  <object-type name="QComboBox">
      <modify-function signature="autoCompletion()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="autoCompletionCaseSensitivity()const" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setAutoCompletion(bool)" remove="all"/> <!--### Obsolete in 4.3-->
      <modify-function signature="setAutoCompletionCaseSensitivity(Qt::CaseSensitivity)" remove="all"/> <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QTextEdit">
    <extra-includes>
        <include file-name="QTextCursor" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QPrinter">
    <extra-includes>
        <include file-name="QPrinterInfo" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QAction">
  </object-type>

  <object-type name="QPainter">
    <extra-includes>
      <include file-name="QWidget" location="global"/>
      <include file-name="QPainterPath" location="global"/>
      <include file-name="QPixmap" location="global"/>
    </extra-includes>

    <modify-function signature="drawText(const QPointF &amp;, const QString &amp;, int, int)" remove="all"/>

    <modify-function signature="drawConvexPolygon(const QPoint *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawConvexPolygon(const QPointF *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawLines(const QLine *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawLines(const QLineF *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawLines(const QPoint *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawLines(const QPointF *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPoints(const QPoint *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPoints(const QPointF *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPolygon(const QPoint *, int, Qt::FillRule)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPolygon(const QPointF *, int, Qt::FillRule)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPolyline(const QPoint *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawPolyline(const QPointF *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawRects(const QRect *, int)">
        <remove/>
    </modify-function>
    <modify-function signature="drawRects(const QRectF *, int)">
        <remove/>
    </modify-function>

    <modify-function signature="matrix()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="matrixEnabled()const" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="setMatrix(QMatrix, bool)" remove="all"/> <!--### Obsolete in 4.3-->
    <modify-function signature="setMatrixEnabled(bool)" remove="all"/> <!--### Obsolete in 4.3-->
  
    <modify-function signature="setBrush(Qt::BrushStyle)" remove="all"/> <!--### Problematic in PythonQt -->
  </object-type>

  <object-type name="QApplication">
    <extra-includes>
      <include file-name="QBasicTimer" location="global"/>
      <include file-name="QFont" location="global"/>
      <include file-name="QFontMetrics" location="global"/>
      <include file-name="QPalette" location="global"/>
      <include file-name="QIcon" location="global"/>
      <include file-name="QLocale" location="global"/>
    </extra-includes>

    <modify-function signature="QApplication(int &amp;, char **, QApplication::Type, int)">
        <remove/>
    </modify-function>
    <modify-function signature="QApplication(int &amp;, char **, bool, int)">
        <remove/>
    </modify-function>

    <modify-function signature="font(const char*)">
        <remove/>
    </modify-function>

    <modify-function signature="palette(const char*)">
        <remove/>
    </modify-function>

    <modify-function signature="QApplication(int&amp;,char**,QApplication::Type,int)" remove="all"/>
    <modify-function signature="QApplication(int&amp;,char**,bool,int)" remove="all"/>
    <modify-function signature="QApplication(int&amp;,char**,int)" remove="all"/>
    <modify-function signature="commitData(QSessionManager&amp;)" remove="all"/>
    <modify-function signature="saveState(QSessionManager&amp;)" remove="all"/>
    <modify-function signature="fontMetrics()" remove="all"/>
  </object-type>

  <object-type name="QMouseEventTransition"/>
  <object-type name="QKeyEventTransition"/>
  <value-type name="QQuaternion"/>

  <object-type name="QCommandLinkButton"/>
  <object-type name="QFileSystemModel">
  </object-type>
  <object-type name="QFormLayout">
    <modify-function signature="addRow(QWidget*,QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addRow(QLayout*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addRow(QWidget*,QLayout*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addRow(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addRow(QString,QLayout*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addRow(QString,QWidget*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QLayout*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QWidget*,QLayout*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QWidget*,QWidget*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QWidget*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QString,QLayout*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertRow(int,QString,QWidget*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setLayout(int,QFormLayout::ItemRole,QLayout*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setWidget(int,QFormLayout::ItemRole,QWidget*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setItem(int,QFormLayout::ItemRole,QLayoutItem*)">
      <modify-argument index="3">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
    
  <object-type name="QGraphicsGridLayout">
    <modify-function signature="addItem(QGraphicsLayoutItem*,int,int,QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="addItem(QGraphicsLayoutItem*,int,int,int,int,QFlags&lt;Qt::AlignmentFlag&gt;)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  <object-type name="QGraphicsLayout">
  </object-type>
  <interface-type name="QGraphicsLayoutItem">
  </interface-type>
  <object-type name="QGraphicsLinearLayout">
    <modify-function signature="addItem(QGraphicsLayoutItem*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="insertItem(int,QGraphicsLayoutItem*)">
      <modify-argument index="2">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
    <modify-function signature="removeItem(QGraphicsLayoutItem*)">
      <modify-argument index="1">
        <define-ownership owner="python" />
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QGraphicsProxyWidget">
    <modify-function signature="QGraphicsProxyWidget(QGraphicsItem*, QFlags&lt;Qt::WindowType&gt;)">
      <modify-argument index="1">
        <define-ownership owner="new-owner-of-this" />
      </modify-argument>
    </modify-function>
    <modify-function signature="setWidget(QWidget*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  
  <object-type name="QGraphicsWidget"
    polymorphic-id-expression="%1-&gt;isWidget()">
    <!-- Duplicate function to QObject::children() to override accidental shadowing which is not present in Jambi -->
    <modify-function signature="children()const" remove="all"/>
    <modify-function signature="setLayout(QGraphicsLayout*)">
      <modify-argument index="1">
        <define-ownership owner="c++" />
      </modify-argument>
    </modify-function>
  </object-type>
  
  <object-type name="QPlainTextDocumentLayout"/>
  <object-type name="QPlainTextEdit">
  </object-type>
  <object-type name="QPrintPreviewDialog">
  </object-type>
  <object-type name="QPrintPreviewWidget"/>
  <object-type name="QStyledItemDelegate">
  </object-type>

  <interface-type name="QAccessibleFactoryInterface" java-name="QAbstractAccessibleFactory"/>
  <interface-type name="QIconEngineFactoryInterfaceV2" java-name="QAbstractIconEngineFactoryV2"/>
  <interface-type name="QImageIOHandlerFactoryInterface" java-name="QAbstractImageIOHandlerFactory"/>
  <interface-type name="QInputContextFactoryInterface" java-name="QAbstractInputContextFactory"/>
  <interface-type name="QStyleFactoryInterface" java-name="QAbstractStyleFactory"/>
  <interface-type name="QTextCodecFactoryInterface" java-name="QAbstractTextCodecFactory"/>
  <interface-type name="QPictureFormatInterface" java-name="QAbstractPictureFormat"/>

  <object-type name="QIconEnginePluginV2"/>
  <object-type name="QImageIOPlugin"/>
  <object-type name="QInputContextPlugin"/>
  <object-type name="QPictureFormatPlugin"/>
  <object-type name="QStylePlugin"/>
  <object-type name="QTextCodecPlugin"/>
  <object-type name="QGesture"/>
  <object-type name="QTapGesture"/>
  <object-type name="QTapAndHoldGesture"/>
  <object-type name="QGraphicsAnchorLayout"/>
  <object-type name="QGraphicsAnchor"/>
  <object-type name="QGraphicsEffect"/>
  <object-type name="QStaticText"/>
  <object-type name="QGraphicsObject">
    <!-- Duplicate function to QObject::children() to override accidental shadowing which is not present in Jambi -->
    <modify-function signature="children()const" remove="all"/>
  </object-type>
  <object-type name="QGraphicsBlurEffect"/>
  <object-type name="QGraphicsColorizeEffect"/>
  <object-type name="QGraphicsDropShadowEffect"/>
  <object-type name="QGraphicsOpacityEffect"/>
  <object-type name="QGraphicsPixelizeEffect"/>
  <object-type name="QGraphicsRotation"/>
  <object-type name="QGraphicsScale"/>
  <object-type name="QGraphicsTransform"/>
  <object-type name="QPanGesture"/>
  <object-type name="QPinchGesture"/>
  <object-type name="QProxyStyle"/>
  <object-type name="QSwipeGesture"/>
  <object-type name="QTouchEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::TouchBegin || %1-&gt;type() == QEvent::TouchUpdate || %1-&gt;type() == QEvent::TouchEnd"/>
  
  <!-- Qt 5 additional classes -->
  <object-type name="QTextObjectInterface"/>
  <object-type name="QRawFont"/>
  <object-type name="QBackingStore"/>
  <object-type name="QEnterEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Enter"/>
  <object-type name="QExposeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Expose"/>
  <object-type name="QInputMethodQueryEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::InputMethodQuery"/>
  <object-type name="QScrollEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Scroll"/>
  <object-type name="QScrollPrepareEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ScrollPrepare"/>
  <object-type name="QGlyphRun"/>
  <object-type name="QInputMethod"/>
  <object-type name="QNativeGestureEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::NativeGesture"/>
  <object-type name="QOffscreenSurface"/>
  <object-type name="QOpenGLBuffer"/>
  <object-type name="QOpenGLContext"/>
  <object-type name="QOpenGLContextGroup"/>
  <object-type name="QOpenGLFramebufferObject"/>
  <object-type name="QOpenGLFramebufferObjectFormat"/>
  <object-type name="QOpenGLFunctions"/>
  <object-type name="QOpenGLShader"/>
  <object-type name="QOpenGLShaderProgram">
    <modify-function signature="setUniformValue(const char*,Array)">
        <remove/>
    </modify-function>
    <modify-function signature="setUniformValue(int,Array)">
        <remove/>
    </modify-function>
  </object-type>
  <object-type name="QOpenGLTexture"/>
  <object-type name="QOpenGLTimeMonitor"/>
  <object-type name="QOpenGLTimerQuery"/>
  <object-type name="QOpenGLVersionProfile"/>
  <object-type name="QOpenGLVertexArrayObject"/>
  <object-type name="QPageLayout"/>
  <object-type name="QPageSize"/>
  <object-type name="QPdfWriter"/>
  <object-type name="QRegularExpressionValidator"/>
  <object-type name="QScreen"/>
  <object-type name="QStyleHints"/>
  <object-type name="QTouchDevice"/>
  <object-type name="QWindow"/>
  <object-type name="QScroller"/>
  <object-type name="QScrollerProperties"/>

  <object-type name="QGuiApplication">
      <modify-function signature="QGuiApplication(int &amp;, char  **, int)" remove="all"/>
  </object-type>
  <interface-type name="QPagedPaintDevice">
    <modify-function signature="devicePageLayout()const" remove="all"/>
  </interface-type>

   <interface-type name="QPlatformSurface"/>
   <interface-type name="QSurface"/>
   <object-type name="QSurfaceFormat"/>
  <value-type name="QPainter::PixmapFragment"/>
  <object-type name="QOpenGLPaintDevice">
    <modify-function signature="QOpenGLPaintDevice(const QOpenGLPaintDevice&amp;)" remove="all"/>
    <modify-function signature="operator=(const QOpenGLPaintDevice&amp;)" remove="all"/>
  </object-type>
  <value-type name="QPagedPaintDevice::Margins"/>

  <enum-type name="QScrollerProperties::ScrollMetric"/>
  <enum-type name="QScrollerProperties::OvershootPolicy"/>
  <enum-type name="QScrollerProperties::FrameRates"/>
  <enum-type name="QScroller::State"/>
  <enum-type name="QScroller::ScrollerGestureType"/>
  <enum-type name="QScroller::Input"/>
  <enum-type name="QSurface::SurfaceType"/>
  <enum-type name="QSurface::SurfaceClass"/>
  <enum-type name="QGlyphRun::GlyphRunFlag" flags="QGlyphRun::GlyphRunFlags"/>
  <enum-type name="QInputMethod::Action"/>
  <enum-type name="QPageSize::Unit"/>
  <enum-type name="QPageSize::SizeMatchPolicy"/>
  <enum-type name="QPageSize::PageSizeId"/>
  <enum-type name="QRawFont::AntialiasingType"/>
  <enum-type name="QRawFont::LayoutFlag" flags="QRawFont::LayoutFlags"/>
  <enum-type name="QOpenGLContext::OpenGLModuleType"/>
  <enum-type name="QOpenGLTexture::MipMapGeneration"/>
  <enum-type name="QOpenGLTexture::TextureFormat"/>
  <enum-type name="QOpenGLTexture::CubeMapFace"/>
  <enum-type name="QOpenGLTexture::CoordinateDirection"/>
  <enum-type name="QOpenGLTexture::TextureFormatClass"/>
  <enum-type name="QOpenGLTexture::DepthStencilMode"/>
  <enum-type name="QOpenGLTexture::SwizzleValue"/>
  <enum-type name="QOpenGLTexture::Filter"/>
  <enum-type name="QOpenGLTexture::PixelFormat"/>
  <enum-type name="QOpenGLTexture::WrapMode"/>
  <enum-type name="QOpenGLTexture::TextureUnitReset"/>
  <enum-type name="QOpenGLTexture::BindingTarget"/>
  <enum-type name="QOpenGLTexture::SwizzleComponent"/>
  <enum-type name="QOpenGLTexture::Feature" flags="QOpenGLTexture::Features"/>
  <enum-type name="QOpenGLTexture::Target"/>
  <enum-type name="QOpenGLTexture::PixelType"/>
  <enum-type name="QOpenGLBuffer::UsagePattern"/>
  <enum-type name="QOpenGLBuffer::Type"/>
  <enum-type name="QOpenGLBuffer::Access"/>
  <enum-type name="QPageLayout::Unit"/>
  <enum-type name="QPageLayout::Mode"/>
  <enum-type name="QPageLayout::Orientation"/>
  <enum-type name="QOpenGLFramebufferObject::Attachment"/>
  <enum-type name="QOpenGLShader::ShaderTypeBit" flags="QOpenGLShader::ShaderType"/>
  <enum-type name="QWindow::Visibility"/>
  <enum-type name="QWindow::AncestorMode"/>
  <enum-type name="QOpenGLFunctions::OpenGLFeature" flags="QOpenGLFunctions::OpenGLFeatures"/>
  <enum-type name="QScrollEvent::ScrollState"/>
  <enum-type name="QTouchDevice::DeviceType"/>
  <enum-type name="QTouchDevice::CapabilityFlag" flags="QTouchDevice::Capabilities"/>

  <enum-type name="QSurfaceFormat::FormatOption" flags="QSurfaceFormat::FormatOptions"/>
  <enum-type name="QSurfaceFormat::RenderableType"/>
  <enum-type name="QSurfaceFormat::SwapBehavior"/>
  <enum-type name="QSurfaceFormat::OpenGLContextProfile"/>

  <!-- Inefficient hash codes -->
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextFrame_iterator' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextTableCell' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextOption_Tab' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextLength' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextBlock_iterator' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextBlock' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextCursor' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QPainterPath_Element' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QPainterPath' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QItemSelection' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QKeySequence' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QSizePolicy' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextFragment' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QFontMetrics' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QGradient' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QFontMetricsF' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QTextFormat' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>  
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QEasingCurve' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QGenericMatrix' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QMatrix4x4' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QMargins' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QPixmapCache_Key' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QVector4D' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QQuaternion' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QVector2D' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QVector3D' has equals operators but no qHash() function. Hashcode of objects will consistently be 0."/>

    <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'eventFilter(QObject * receiver, QEvent * event)' in 'QPanGesture'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'event(QEvent * event)' in 'QPanGesture'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'eventFilter(QObject * receiver, QEvent * event)' in 'QSwipeGesture'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'eventFilter(QObject * receiver, QEvent * event)' in 'QPinchGesture'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'event(QEvent * event)' in 'QPinchGesture'"/>
  
  <!-- Intentional omissions. See explanation for QtJambiTextObjectInterface class in typesystem and headers. -->
  <suppress-warning text="WARNING(MetaJavaBuilder) :: class 'QTextObjectInterface' inherits from unknown base class 'QTextObjectInterface'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unknown interface for 'QTextObjectInterface': 'QTextObjectInterfaceInterface'"/>

  <suppress-warning text="WARNING(MetaInfoGenerator) :: class 'QPixmapFilter' inherits from polymorphic class 'QPixmapFilter', but has no polymorphic id set"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPixmap::QPixmap', unmatched parameter type 'QPixmapData*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private&amp;'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private const\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTextEngine\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QFontEngine\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QPixmap::Type'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QInputDialog::Type'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTextFrameLayoutData\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAbstractUndoItem\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QImageTextKeyLang*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: non-public function '*' in interface '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unsupported default value 'QVector&lt;FormatRange&gt;()' of argument in function '*', class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unsupported default value 'QVariantList()' of argument in function '*', class '*'"/>
  <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QTextLayout::QTextLayout', unmatched parameter type 'QTextEngine*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unsupported default value of argument in function 'doAction', class 'QAccessibleInterface'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFileDialog::QFileDialog', unmatched parameter type 'QFileDialogArgs const&amp;'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unsupported default value '0., 0., 1000000000., 1000000000.' of argument in function 'update', class 'QAbstractTextDocumentLayout'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QWidget::windowSurface', unmatched return type 'QWindowSurface*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QWidget::setWindowSurface', unmatched parameter type 'QWindowSurface*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QStyleOption::StyleOptionType' does not have a type entry or is not an enum"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unhandled enum value: ~FlagMask in QMessageBox::StandardButton"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unmatched enum ~FlagMask"/>
  <suppress-warning text="WARNING(MetaInfoGenerator) :: class 'QGraphicsSceneEvent' inherits from polymorphic class 'QEvent', but has no polymorphic id set"/>
  <suppress-warning text="WARNING(MetaInfoGenerator) :: class 'QInputEvent' inherits from polymorphic class 'QEvent', but has no polymorphic id set"/>
  <suppress-warning text="WARNING(JavaGenerator) :: either add or remove specified for reference count variable '__rcMenus' in 'com.trolltech.qt.gui.QMenu' but not both"/>
  <suppress-warning text="WARNING(JavaGenerator) :: either add or remove specified for reference count variable '__rcMenus' in 'com.trolltech.qt.gui.QMenuBar' but not both"/>

  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPixmap::pixmapData', unmatched return type 'QPixmapData*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: object type 'QAccessible' extended by interface type 'QAbstractAccessibleFactory'. The resulting API will be less expressive than the original."/>

  <suppress-warning text="WARNING(MetaJavaBuilder) :: Rejected enum has no alternative...: QPalette::NColorRoles"/>

  <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'QtSharedPointer' does not have a type entry"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Rejected enum has no alternative...: QPalette::NColorRoles"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Cannot find enum constant for value 'DragMove' in 'QDragMoveEvent' or any of its super classes"/>

</typesystem>
